{
	"actionSlotsHide": "Hide the actionslots.",
	"adsZeroSpread": "Immediately zero spreadAmount when fully ADS",
	"ai_angularYawAccelRate": "yaw acceleration rate",
	"ai_angularYawDecelFactor": "yaw deceleration factor (decel rate = factor * accel rate)",
	"ai_angularYawEnabled": "turn on velocity based body rotation",
	"ai_corpseCount": "Maximum number of AI corpses",
	"ai_debugAnimDeltas": "Display animation delta debug information",
	"ai_debugClaimedNodes": "Enable debugging information claimed status of nodes",
	"ai_debugCoverEntityNum": "Display debug info for cover",
	"ai_debugEntIndex": "Entity index of an entity to debug",
	"ai_debugFindPath": "Display AI 'find path' debugging information",
	"ai_debugFindPathDirect": "Display AI 'find direct path' debugging information",
	"ai_debugFindPathLock": "Find path lock",
	"ai_debugFindPathWidth": "Display paths with the given width",
	"ai_debugMayMove": "Display debug information for AI 'may move' calculations",
	"ai_debugMeleeAttackSpots": "Enable debugging information for melee attack spots",
	"ai_debugThreatSelection": "Enable debugging information for threat selection",
	"ai_disableSpawn": "Do not spawn AI",
	"ai_eventDistBadPlace": "Distance used for AI event",
	"ai_eventDistBullet": "ai_eventDistSilencedShot",
	"ai_eventDistBulletRunning": "Distance used for AI event",
	"ai_eventDistDeath": "Distance used for AI event",
	"ai_eventDistExplosion": "Distance used for AI event",
	"ai_eventDistFootstep": "Distance used for AI event",
	"ai_eventDistFootstepLite": "Distance used for AI event",
	"ai_eventDistGrenadePing": "Distance used for AI event",
	"ai_eventDistGunShot": "Distance used for AI event",
	"ai_eventDistNewEnemy": "Distance used for AI event",
	"ai_eventDistPain": "Distance used for AI event",
	"ai_eventDistProjImpact": "Distance used for AI event",
	"ai_eventDistProjPing": "Distance used for AI event",
	"ai_eventDistReact": "Distance used for AI event",
	"ai_eventDistSilencedShot": "Distance used for AI event",
	"ai_foliageSeeThroughDist": "Maximum distance AI ignore foliage for sight trace to targets",
	"ai_friendlySuppression": "Whether AI fire will suppression teammates or not.",
	"ai_friendlySuppressionDist": "Max distance at which AI suppress teammates",
	"ai_maxAttackerCount": "Max number of AI's that will attack one player",
	"ai_meleeDamage": "The amount of damage dealt by AI's melee attack",
	"ai_meleeHeight": "The height of the AI's melee attack",
	"ai_meleeRange": "The maximum range of the AI's melee attack",
	"ai_meleeWidth": "The width of the AI's melee attack",
	"ai_moveOrientMode": "Debug AI Orient Mode",
	"ai_noDodge": "AI won't dodge to the side",
	"ai_pathChokePointCost": "The distance AI would travel around to randomly avoid going through a choke point.",
	"ai_pathMomentum": "Momentum factor for continuing motion in previous direction. 0 for no momentum carry over",
	"ai_pathNegotiationOverlapCost": "The distance AI would travel around to avoid going to a negotiation being used. Multiplied by number of users of the negotiation",
	"ai_pathRandomPercent": "Amount of random cost percent to add to each path node so AI always take slightly different routes",
	"ai_playerFarAccuracy": "Accuracy for AI far away from the player",
	"ai_playerFarRange": "Minimum range for AI to use 'far' accuracy",
	"ai_playerNearAccuracy": "Accuracy for an AI near to a player",
	"ai_playerNearRange": "Maximum range for AI to use 'near' accuracy",
	"ai_showBadPlaces": "Display debug information for 'bad places",
	"ai_ShowCanshootChecks": "Display debugging information for 'can shoot' checks",
	"ai_showDodge": "Display debug information for AI dodging",
	"ai_showFailedPaths": "Shows failed AStar searches that take longer than the dvar value in milliseconds.",
	"ai_showNearestNode": "Show nodes closest to AI",
	"ai_showNodeDrawType": "Change ai_showNodes to render double wide or flying nodes",
	"ai_showNodes": "Show AI navigation node debug information",
	"ai_showNodesDist": "Maximum distance from the camera at which AI nodes are shown",
	"ai_showPathFindNodes": "Show nodes consider in latest path find",
	"ai_showPaths": "Show AI navigation paths",
	"ai_showPotentialThreatDir": "Display AI potential threat direction",
	"ai_showVisData": "Display debug information for visibility data",
	"ai_showVisDataDist": "Maximum distance for visibility data debugging information to be shown",
	"ai_showVolume": "Draw the goal volume and fixed node safe volume for an AI",
	"ai_slowdownMaxYawDiff": "max yaw diff used for slowdown cal",
	"ai_slowdownMinRate": "anim rate at ai_slowdownMaxYawDiff",
	"ai_slowdownMinYawDiff": "min yaw diff before slowdown kicks in",
	"ai_slowdownRateBlendFactor": "percent of desired rate that goes into final rate",
	"ai_threatUpdateInterval": "AI target threat update interval in milliseconds",
	"ai_trim_path_zigzags": "enables/disables the goal nodes pickup logic",
	"ai_turnRate": "turn rate for AI",
	"ai_useBetterLookahead": "t5 lookahead improvements (not for MP - PETER)",
	"ai_useFacingTranslation": "whether to use facing to determine direction of translation",
	"ai_useLeanRunAnimations": "whether to use lean run animations instead of strafes",
	"airburstAdjustDistance": "Distance to append to airburst locked in distance.",
	"all_players_are_connected": "ui_drawSpinnerAfterMovie",
	"allClientDvarsEnabled": "Allow host to set all client dvars",
	"allItemsPurchased": "Allows all items to be equiped in Create-a-Class",
	"allItemsUnlocked": "Allows all items to be purchased in the Black Market",
	"allowAllNAT": "tu13_recordContentAvailable",
	"allowHost_matchesHostedRatio": "Required match completion/hosted ratio. 0 is off.",
	"allowHost_matchesHostedStreak": "Required number of hosted completions in a row. 0 is off.",
	"allowHost_matchesPlayedRatio": "Required match completion/played ratio. 0 is off.",
	"allowHost_matchesPlayedStreak": "Required number of played completions in a row. 0 is off.",
	"ammoCounterHide": "Hide the Ammo Counter",
	"band_12players": "12 player bandwidth req'd",
	"band_18players": "18 player bandwidth req'd",
	"band_2players": "2 player bandwidth req'd",
	"band_4players": "4 player bandwidth req'd",
	"band_6players": "6 player bandwidth req'd",
	"band_8players": "8 player bandwidth req'd",
	"band_dedicated": ">18 player bandwidth req'd",
	"band_demosystem": "demo system bandwidth req'd",
	"bandwidth_retry_interval": "Interval at which Bandwidth test will be retried",
	"bg_aimSpreadMoveSpeedThreshold": "When player is moving faster than this speed, the aim spread will increase",
	"bg_blendTimeOverride": "Force all player animations to have this blendtime",
	"bg_bobMax": "The maximum allowed bob amplitude",
	"bg_chargeShotAutoDischargeDelay": "If the weapon reaches the max bullet queue and is set to auto discharge, it will discharge automatically after these many milliseconds.",
	"bg_chargeShotAutoFireDelay": "If the weapon reaches the max bullet queue and is set to auto fire, it will fire automatically after these many milliseconds.",
	"bg_chargeShotCenterSpeedReductionPerBullet": "This value will be multiplied to the base center speed and subtracted from the base center speed, for every extra bullet queued up.",
	"bg_chargeShotDamageIncreasePerBullet": "This value will be multiplied to the base damage and added to the base damage, for every extra bullet queued up. Final damage will be (base + n*(this value)*base), where n is the number of bullets queued up.",
	"bg_chargeShotDischargeWhenQueueReachesMax": "Whether to discharge the charge shot weapon automatically when it reaches max bullet queue.",
	"bg_chargeShotFireWhenQueueReachesMax": "Whether to fire the charge shot weapon automatically when it reaches max bullet queue.",
	"bg_chargeShotMaxBulletQueueOnEMP": "Max bullets which can be queued if the player is EMPed.",
	"bg_chargeShotMaxBulletsInQueue": "Maximum number of bullets that can be queued up in charge shot type weapons.",
	"bg_chargeShotMaxViewKick": "The view kick will not go beyond this value no matter how many bullets are queued up.",
	"bg_chargeShotMinCenterSpeed": "The recenter speed will never go below this value no matter how many bullets are queued up.",
	"bg_chargeShotPenetrationMultiplier": "Multiplier for extra bullet penetration for charge shot weapons. This stacks additively with the bullet penetration perk.",
	"bg_chargeShotQueueTime": "The time it takes in ms for the player to charge up one bullet in charge shot type weapons.",
	"bg_chargeShotUseOneAmmoForMultipleBullets": "If set, the ammo count will be reduced only by one, even though multiple bullets are fired.",
	"bg_chargeShotViewKickIncreasePerBullet": "This value will be multiplied to the base view kick and added to the base view kick, for every extra bullet queued up.",
	"bg_disableWeaponPlantingInWater": "Disables being able to plant mines in the water.",
	"bg_dog_swim_enabled": "Dogs will play the dog swim anim when in water.",
	"bg_dog_swim_water_max": "Trace for water height ends at this z",
	"bg_dog_swim_water_min": "Trace for water height starts at this z",
	"bg_fallDamageMaxHeight": "The height that a player will take maximum damage when falling",
	"bg_fallDamageMinHeight": "The height that a player will start to take minimum damage if they fall",
	"bg_foliagesnd_fastinterval": "The time between each foliage sound when moving quickly",
	"bg_foliagesnd_maxspeed": "The speed that a player must be going to make maximum noise while moving through foliage",
	"bg_foliagesnd_minspeed": "The speed that a player must be going to make minimum noise while moving through foliage",
	"bg_foliagesnd_resetinterval": "The time interval before foliage sounds are reset after the player has stopped moving",
	"bg_foliagesnd_slowinterval": "The time between each foliage sound when moving slowly",
	"bg_forceAnimOverrideTimerCheck": "Enables a change that may fix prone animation 'snaking",
	"bg_forceDurationOverride": "Force all player animations to have this duration",
	"bg_forceExplosiveBullets": "When set, all bullet weapons will fire explosive rounds (Simulates Perk)",
	"bg_gravity": "Gravity in inches per second per second",
	"bg_gunXOffset": "This will offset where the bullets come out of the gun",
	"bg_ladder_yawcap": "The maximum angle that a player can look around while on a ladderplayer_lean_rotate_crouch",
	"bg_legYawCrouchTolerance": "The amount the player's leg yaw can differ from his torso before moving to match",
	"bg_legYawProneTolerance": "The amount the player's leg yaw can differ from his torso before moving to match while prone",
	"bg_legYawTolerance": "The amount the player's leg yaw can differ from his torso before moving to match",
	"bg_lowGravity": "Low gravity for slow or floaty objects, in inches per second per second",
	"bg_maxGrenadeIndicatorSpeed": "Maximum speed of grenade that will show up in indicator and can be thrown back.",
	"bg_moonGravity": "Gravity on the moon, in inches per second per second",
	"bg_movingPlatformPitchScale": "The scale to apply to pitch from the moving platform that should be applied to the player's pitch",
	"bg_plantInWaterDepth": "Min distance between the water surface and the ground where we can plant",
	"bg_playerAnimStanceAllowMovementInteruptTime": "When enabled, will force movement override on all stance transition animations, but only after the given time has elapsed on the transition anim.",
	"bg_prone_yawcap": "The maximum angle that a player can look around quickly while prone",
	"bg_proneSwingSpeed": "The rate at which the player's legs swing around when turning and prone",
	"bg_serverDelayDamageKickForPing": "Turn on delayed damage kick on server to allow for client ping",
	"bg_shieldHitEncodeHeightVM": "The decoding range, in height, of a client's viewmodel shield.",
	"bg_shieldHitEncodeHeightWorld": "The encoding range, in height, of a client's world shield.  A hit in this range is encoded into one of 8 rows.",
	"bg_shieldHitEncodeWidthVM": "The decoding range, in width, of a client's viewmodel shield.",
	"bg_shieldHitEncodeWidthWorld": "The encoding range, in width, of a client's world shield.  A hit in this range is encoded into one of 16 collumns.",
	"bg_shock_animation": "Play the 3rd person animation during shellshock",
	"bg_shock_lookControl": "Alter player control during shellshock",
	"bg_shock_lookControl_fadeTime": "The time for the shellshock player control to fade in seconds",
	"bg_shock_lookControl_maxpitchspeed": "Maximum pitch movement rate while shellshocked in degrees per second",
	"bg_shock_lookControl_maxyawspeed": "Maximum yaw movement rate while shell shocked in degrees per second",
	"bg_shock_lookControl_mousesensitivityscale": "Sensitivity scale to apply to a shellshocked player",
	"bg_shock_movement": "Affect player's movement speed during shellshock",
	"bg_shock_screenBlurBlendFadeTime": "he amount of time in seconds for the shellshock effect to fade",
	"bg_shock_screenBlurBlendTime": "The amount of time in seconds for the shellshock effect to blend",
	"bg_shock_screenFlashShotFadeTime": "In seconds, how soon from the end of the effect to start blending out the screen grab layer",
	"bg_shock_screenFlashWhiteFadeTime": "In seconds, how soon from the end of the effect to start blending out the whiteout layer",
	"bg_shock_screenType": "Shell shock screen effect type",
	"bg_shock_sound": "Play shell shock sound",
	"bg_shock_soundDryLevel": "Shell shock sound dry level",
	"bg_shock_soundEnd": "Shellshock end sound alias",
	"bg_shock_soundEndAbort": "Shellshock aborted end sound alias",
	"bg_shock_soundFadeInTime": "Shell shock sound fade in time in seconds",
	"bg_shock_soundFadeOutTime": "Shell shock sound fade out time in seconds",
	"bg_shock_soundLoop": "Shellshock loop alias",
	"bg_shock_soundLoopEndDelay": "Sound loop end offset time from the end of the shellshock in seconds",
	"bg_shock_soundLoopFadeTime": "Shell shock sound loop fade time in seconds",
	"bg_shock_soundLoopSilent": "The sound that gets blended with the shellshock loop alias",
	"bg_shock_soundModEndDelay": "The delay from the end of the shell shock to the end of the sound",
	"bg_shock_soundRoomType": "sound room",
	"bg_shock_soundSnapshot": "sound snapshot",
	"bg_shock_soundWetLevel": "Shell shock sound wet level",
	"bg_shock_viewKickFadeTime": "The time for the shellshock kick effect to fade",
	"bg_shock_viewKickPeriod": "The period of the shellshock view kick effect",
	"bg_shock_viewKickRadius": "Shell shock kick radius",
	"bg_shock_visionset_inTime": "Vision set in transition time (in seconds)",
	"bg_shock_visionset_name": "Vision set that will be transitioned to when this shellshock play",
	"bg_shock_visionset_outTime": "Vision set out transition time (in seconds)",
	"bg_slopeFrames": "The number of frames to use to determine slope run animations",
	"bg_swingSpeed": "The rate at which the player's legs swing around when strafing(multi-player only)",
	"bg_teleportAlignTime": "How long to align the player body after teleporting/respawning",
	"bg_useClientDamageKick": "Turn on to make the server use the damage kick angles from the client usercmd",
	"bg_vehicle_gravity": "Gravity applied to client predicted vehicles",
	"bg_vehicle_ground_max_normal": "The z-value of the normal for ground surfaces that a vehicle cannot be on",
	"bg_vehicle_ground_min_normal": "Minimum z-value of the normal of what is considered a drivable ground surface",
	"bg_vehicle_max_body_pitch": "The maximum angle of the vehicle's body pitch",
	"bg_vehicle_max_body_roll": "The maximum angle of the vehicle's body roll",
	"bg_vehicle_max_pitch": "The maximum angle of the vehicle's pitch",
	"bg_vehicle_max_roll": "The maximum angle of the vehicle's roll",
	"bg_vehicle_overclip": "The amount to pull back from the clip plane when moving a vehicle across it",
	"bg_vehicle_pitch_track": "The rate at which the vehicle's plane tracks the ground plane in pitch",
	"bg_vehicle_roll_track": "The rate at which the vehicle's plane tracks the ground plane in roll",
	"bg_vehicle_slide_min_normal": "Minimum z-value of the normal of the ground at which the vehicle begins to slide with gravity",
	"bg_vehicle_sphere_bounds_offset_z": "Helicopter collision Z offset amount. Move to GDT alongside vehHelicopterBoundsRadius post ship.",
	"bg_vehicle_stepsize": "The height of the step the vehicle makes when trying to move over obstacles",
	"bg_vehicle_tangential_clip_max_scale": "The amount by which the current velocity is scaled when clamping tangential clip velocity.",
	"bg_vehicle_tangential_clip_vel_scale": "The amount by which the tangential velocity is scaled when movement is clipped.",
	"bg_vehicle_trace_offset": "The length, up and down, of the vehicle's capsule trace when finding the ground",
	"bg_viewBobAmplitudeDtp": "The multiplier to apply to the player's speed to get the bob amplitude while diving to prone",
	"bg_viewBobAmplitudeDucked": "The multiplier to apply to the player's speed to get the bob amplitude while ducking",
	"bg_viewBobAmplitudeDuckedAds": "The multiplier to apply to the player's speed to get the view bob amplitude while ducking ADS",
	"bg_viewBobAmplitudeProne": "The multiplier to apply to the player's speed to get the bob amplitude while prone",
	"bg_viewBobAmplitudeRoll": "The amplitude applied to the roll for view bobbing",
	"bg_viewBobAmplitudeSprinting": "The multiplier to apply to the player's speed to get the bob amplitude while sprinting",
	"bg_viewBobAmplitudeStanding": "The multiplier to apply to the player's speed to get the bob amplitude while standing",
	"bg_viewBobAmplitudeStandingAds": "The multiplier to apply to the player's speed to get the view bob amplitude while standing and ADS",
	"bg_viewBobAmplitudeSwimming": "The multiplier to apply to the player's speed to get the bob amplitude while swimming",
	"bg_viewKickMax": "The maximum view kick",
	"bg_viewKickMin": "The minimum view kick",
	"bg_viewKickRandom": "The random direction scale view kick",
	"bg_viewKickScale": "The scale to apply to the damage done to caluclate damage view kick",
	"bg_vsmode_hud": "Used to control diferences in vsmode hud.",
	"bg_weaponBobAmplitudeBaseLaser": "The base speed-based weapon bob amplitude while holding a laser sight weapon",
	"bg_weaponBobAmplitudeDtp": "The multiplier to apply to the player's speed to get the weapon bob amplitude while diving to prone",
	"bg_weaponBobAmplitudeDucked": "The multiplier to apply to the player's speed to get the weapon bob amplitude while ducking",
	"bg_weaponBobAmplitudeProne": "The multiplier to apply to the player's speed to get the weapon bob amplitude while prone",
	"bg_weaponBobAmplitudeRiding": "The multiplier to apply to the vehicle's speed to get the weapon bob amplitude while riding",
	"bg_weaponBobAmplitudeRoll": "The amplitude applied to the roll for weapon bobbing",
	"bg_weaponBobAmplitudeRollLaser": "The amplitude applied to the roll for weapon bobbing while holding a laser sight weapon",
	"bg_weaponBobAmplitudeSprinting": "The multiplier to apply to the player's speed to get the weapon bob amplitude while sprinting",
	"bg_weaponBobAmplitudeStanding": "The multiplier to apply to the player's speed to get the weapon bob amplitude while standing",
	"bg_weaponBobAmplitudeSwimming": "The multiplier to apply to the player's speed to get the weapon bob amplitude while swimming",
	"bg_weaponBobFrequencySwimming": "Controls the speed of the camera bob while swimming",
	"bg_weaponBobHeavyWeaponScalar": "Scalar applied to bob angles for heavy weapons (minigun)",
	"bg_weaponBobLag": "The lag that will be applied the weapon bob cycle",
	"bg_weaponBobMax": "The maximum allowed weapon/viewmodel bob amplitude",
	"bg_weaponOffscreenReloadScale": "The multiplier to apply to the offscreen reload time",
	"blackboxHighVolumeProbability": "Probability of sending high volume blackbox data",
	"bot_AllowGrenades": "Allow the bots to throw grenades",
	"bot_CloseDistance": "Bot enemy close distance. Used for threat selection",
	"bot_CrouchDistance": "If the path lookahead distance is less than this number, the bot will crouch",
	"bot_difficulty": "Difficulty level of the basic training bots",
	"bot_enemies": "Number of enemies allowed in basic training",
	"bot_Fov": "Bot field of view angle in degrees",
	"bot_friends": "Number of friends allowed in basic training",
	"bot_GoalRadius": "Bot goal radius",
	"bot_MaxAdsTime": "The maximum amount of time in ms the bot will remain in ADS. Used to prevent repeatedly popping in and out of ads.",
	"bot_MaxCrouchTime": "The maximum amount of time in ms the bot will hold his crouch stance",
	"bot_MaxDeathTime": "The maximum amount of time in ms the bot will hold his position while his target is dead",
	"bot_MaxFireTime": "When firing a non-automatic weapon, the maximum amount of time the bot will delay before firing again. Used to simulate the time to depress and press the controller attack trigger.",
	"bot_MaxGrenadeTime": "The maximum amount of time in ms the bot must lose sight of his enemy before throwing a grenade.",
	"bot_MaxPitchTime": "The maximum amount of time in ms the bot will hold his current pitch on the target when engaged",
	"bot_MaxReactionTime": "Bot maximum time to react when first seeing a target",
	"bot_MaxStrafeTime": "Bot maximum time to strafe when engaged",
	"bot_MeleeDist": "The range from the target from which the bot will press the melee button",
	"bot_MinAdsTime": "The minimum amount of time in ms the bot will remain in ADS. Used to prevent repeatedly popping in and out of ads.",
	"bot_MinCrouchTime": "The minimum amount of time in ms the bot will hold his crouch stance",
	"bot_MinDeathTime": "The minimum amount of time in ms the bot will hold his position while his target is dead",
	"bot_MinFireTime": "When firing a non-automatic weapon, the minimum amount of time the bot will delay before firing again. Used to simulate the time to depress and press the controller attack trigger.",
	"bot_MinGrenadeTime": "The minimum amount of time in ms the bot must lose sight of his enemy before throwing a grenade.",
	"bot_MinPitchTime": "The minimum amount of time in ms the bot will hold his current pitch on the target when engaged",
	"bot_MinReactionTime": "Bot minimum time to react when first seeing a target",
	"bot_MinStrafeTime": "Bot minimum time to strafe when engaged",
	"bot_PitchDown": "Bot pitch minimum (looking downward)",
	"bot_PitchSpeed": "Bot pitch lerp speed",
	"bot_PitchSpeedAds": "Bot pitch lerp speed used when engaging",
	"bot_PitchUp": "Bot pitch maximum (looking upward)",
	"bot_SprintDistance": "If the path lookahead distance is this number or greater, the bot will sprint",
	"bot_StrafeChance": "The percentage chance that the bot will strafe when engaged",
	"bot_TargetLeadBias": "The number of server frames used to predict an entity's position. Used for bot aiming when firing.",
	"bot_UseFriendNames": "Testclients will use names from the players' friends list",
	"bot_YawSpeed": "Bot yaw rate for normal turning",
	"bot_YawSpeedAds": "Bot yaw rate for slower (fine tuning) turning",
	"bullet_penetrationEnabled": "Enable/Disable bullet penetration.",
	"bullet_ricochetBaseChance": "The base chance a bullet has of ricocheting off of a riot shield.bullet_penetrationMinFxDist",
	"bulletrange": "Defines the how far the bulllets will go.",
	"cameraShakeRemoteHelo_Angles": "Remote helicopter gunner cam, range to shake the view.",
	"cameraShakeRemoteHelo_Freqs": "Remote helicopter gunner cam, how fast to shake.",
	"cameraShakeRemoteHelo_SpeedRange": "Remote helicopter gunner cam, range of missile speed to scale the shaking.",
	"cameraShakeRemoteMissile_Angles": "Remote missile-cam, range to shake the view.",
	"cameraShakeRemoteMissile_Freqs": "Remote missile-cam, how fast to shake.",
	"cameraShakeRemoteMissile_SpeedRange": "Remote missile-cam, range of missile speed to scale the shaking.",
	"cg_adsZScaleMax": "The scale factor for shrinky dinks",
	"cg_airburstCameraRestriction": "Amount of movement of camera movement allowed before reseting laze.",
	"cg_airburstLaseFlashTime": "Time that the distance numbers in the menus will flash green after lase is complete.",
	"cg_airburstLaseTime": "Time required to lase a distance in seconds.",
	"cg_airburstStrafeRestriction": "Amount of movement of strafe movement allowed before reseting laze.",
	"cg_allow_mature": "Controls Mature Content selectability",
	"cg_allPlayerNamesVisible": "When true all names are visible within visibility range.",
	"cg_alt_mode_killstreak_fix_tu6": "When switching back from a killstreak without the killstreak finishing fully the alt mode was reset to default.",
	"cg_altDofTrace": "Use more precise trace for finding the DOF center of interest",
	"cg_artilleryKillCamBackDist": "artillery kill camera: distance of camera backwards from artillery.",
	"cg_artilleryKillCamFov": "Artillery kill camera field of view.",
	"cg_artilleryKillCamGroundBackDist": "artillery kill camera when stuck to ground: distance of camera backwards from artillery.",
	"cg_artilleryKillCamGroundUpDist": "artillery kill camera when stuck to ground: distance of camera vertically from artillery.",
	"cg_artilleryKillCamUpDist": "artillery kill camera: distance of camera vertically from artillery.",
	"cg_artilleryKillCamWallOutDist": "artillery kill camera when stuck to wall: distance of camera out from wall.",
	"cg_artilleryKillCamWallSideDist": "artillery kill camera when stuck to wall: distance of camera along wall from artillery.",
	"cg_BallisticArc_BeginWidth": "Starting width of the arrow",
	"cg_BallisticArc_DrawDelay": "Amount of time in ms before the arc starts to render",
	"cg_BallisticArc_EndWidth": "Ending width of the arrow",
	"cg_BallisticArc_ForceHitIndicator": "force the grenade arc indicator to indicate a hit condition",
	"cg_BallisticArc_MaxBounces": "Stop rendering bounces at this item",
	"cg_BallisticArc_MinBounces": "Start rendering bounces at this item",
	"cg_BallisticArc_Offset": "Distance to offset the start of the arc from the true launch position",
	"cg_cameraSpikeEnemyColor": "Color of enemies in the camera spike view",
	"cg_cameraSpikeHighlightBrightness": "Brightness of player highlights in the camera spike view",
	"cg_cameraVehicleExitTweenTime": "Time(secs) to tween from gunner/vehicle camera to normal player camera",
	"cg_cameraWaterClip": "Min distance between camera and water surface. To prevent camera seeing water edge-on. Set to -1 to disable",
	"cg_canSeeFriendlyFrustumExpand": "The frustum expansion to determine if a friendly is on screen.  Positive is inwards.",
	"cg_canSeeFriendlyFrustumMinDistance": "If target is inside this distance frustum culling is not applied.",
	"cg_canSeeFriendlyFrustumUpdateInterval": "How often the head tag is updated for the overhead names",
	"cg_centertime": "The time for a center printed message to fade",
	"cg_chatHeight": "The font height of a chat message",
	"cg_cinematicFullscreen": "Draw ingame cinematics full screen",
	"cg_colorHue": "Color hue",
	"cg_colorSaturation": "Color saturation",
	"cg_colorScale": "color scale",
	"cg_colorTemp": "color temp",
	"cg_constantSizeHeadIcons": "Head icons are the same size regardless of distance from the player",
	"cg_corpseHighlightFadeTime": "Time (in seconds) that corpse highlights fade out",
	"cg_crosshairAlpha": "The alpha value of the crosshair",
	"cg_crosshairAlphaMin": "The minimum alpha value of the crosshair when it fades in",
	"cg_crosshairDynamic": "Crosshair is Dynamic",
	"cg_crosshairEnemyColor": "The crosshair color when over an enemy",
	"cg_cullBulletAngle": "Cull bullet trajectories that don't fall within this fov",
	"cg_cullBullets": "Whether to cull bullet fire prediction if trajectory doesn't pass your view or anywhere near you",
	"cg_cursorHints": "Draw cursor hints where:",
	"cg_debug_overlay_viewport": "Remove the sniper overlay so you can check that the scissor window is correct.",
	"cg_debugevents": "Output event debug information",
	"cg_debugposition": "Output position debugging information",
	"cg_destructibleKillCamCloseXYDist": "Destructible kill camera closest distance in front of the bomb.",
	"cg_destructibleKillCamCloseZDist": "Destructible kill camera closest distance above the target.",
	"cg_destructibleKillCamFarBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"cg_destructibleKillCamFarBlurDist": "Destructible kill camera distance above the airplane.",
	"cg_destructibleKillCamFarBlurStart": "Destructible kill camera distance above the airplane.",
	"cg_destructibleKillCamFov": "Destructible kill camera field of view.",
	"cg_destructibleKillCamNearBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"cg_destructibleKillCamNearBlurEnd": "Destructible kill camera distance above the airplane.",
	"cg_destructibleKillCamNearBlurStart": "Destructible kill camera distance above the airplane.",
	"cg_destructibleKillCamRegularHeight": "If a destructible is above this height, then just move the camera to above it",
	"cg_destructibleKillCamZIncrease": "Height above origin for the destructibles",
	"cg_development": "Indicates if we are in DEVELOPMENT (non-release ship builds)",
	"cg_disableplayernames": "Disable player names",
	"cg_dogKillCamDistFromEyes": "Dog kill camera: distance of camera past the delta from player target to dog eye",
	"cg_dogKillCamForwardDist": "Dog kill camera: distance of target camera vertically from dog.",
	"cg_dogKillCamFov": "Dog kill camera field of view.",
	"cg_dogKillCamSideDist": "cg_dogKillCamUpDist",
	"cg_dogKillCamUpDist": "Dog kill camera: distance of camera target vertically from dog.",
	"cg_dogKillMinDistFromTarget": "Dog kill camera: minimum distance that the camera will approach the target",
	"cg_draw2D": "Draw 2D screen elements",
	"cg_drawBigFPS": "Draws frames per second in large font and FPS curtains.",
	"cg_drawBreathHint": "Draw a 'hold breath to steady' hint",
	"cg_drawCrosshair": "Turn on weapon crosshair",
	"cg_drawCrosshairNames": "Draw the name of an enemy under the crosshair",
	"cg_drawCrosshairNamesPosX": "Virtual screen space position of the crosshair name",
	"cg_drawCrosshairNamesPosY": "cg_drawCrosshairNamesPosX",
	"cg_drawFPS": "Draw frames per second",
	"cg_drawFPSOnly": "Draw only the FPS stats in the upper right",
	"cg_drawFriendlyNames": "Whether to show friendly names in game",
	"cg_drawGun": "Draw the view model",
	"cg_drawHealth": "Draw health bar",
	"cg_drawHoldBreathHint": "Turn on hold breath hint string for the sniper rifles",
	"cg_drawlagometer": "Draw lagometer",
	"cg_drawMaterial": "Draw debugging information for materials",
	"cg_drawMaterialImageName": "Do not use (set by cg_drawMaterialImageNum code)",
	"cg_drawMaterialImageNum": "Use up/down on the dpad to select an image when cg_drawMaterial is enabled.  Press right for more info on that image.",
	"cg_drawModelAxis": "Draw debugging axis for a bone of the model under the crosshair",
	"cg_drawpaused": "Draw paused screen",
	"cg_drawShellshock": "Draw shellshock & flashbang screen effects.",
	"cg_drawTalk": "Controls which icons CG_TALKER ownerdraw draws",
	"cg_drawThroughWalls": "Whether to draw friendly names through walls or not",
	"cg_droneKillCamBackDist": "Drone kill camera: distance of camera backwards from drone.",
	"cg_droneKillCamUpDist": "Drone kill camera: distance of camera vertically from drone.",
	"cg_dumpAnims": "Output animation info for the given entity id",
	"cg_EnableAdaptiveSkinLodScale": "Dynamically change the LOD scale for skinned models when the skinned vertex cache is close to being full",
	"cg_enableHelicopterNoCullLodOut": "When true objects do not get LOD'ed out when in the helicopter",
	"cg_enemyNameFadeIn": "Time in milliseconds to fade in enemy names",
	"cg_enemyNameFadeOut": "Time in milliseconds to fade out enemy names",
	"cg_explosiveKillCamBackDist": "Explosive kill camera: distance of camera backwards from explosive.",
	"cg_explosiveKillCamGroundBackDist": "Explosive kill camera when stuck to ground: distance of camera backwards from explosive.",
	"cg_explosiveKillCamGroundUpDist": "Explosive kill camera when stuck to ground: distance of camera vertically from explosive.",
	"cg_explosiveKillCamStopDecelDist": "Rocket and Grenade Launcher kill camera: distance over which to decelerate when coming to rest",
	"cg_explosiveKillCamStopDist": "Rocket and Grenade Launcher kill camera: distance from player to begin coming to rest",
	"cg_explosiveKillCamUpDist": "Explosive kill camera: distance of camera vertically from explosive.",
	"cg_explosiveKillCamWallOutDist": "Explosive kill camera when stuck to wall: distance of camera out from wall.",
	"cg_explosiveKillCamWallSideDist": "Explosive kill camera when stuck to wall: distance of camera along wall from explosive.",
	"cg_fakefireWizbyChance": "The probability that a fake fire shot plays a wizby to local players round",
	"cg_firstPersonTracerChance": "The probability that a bullet is a tracer round for your bullets",
	"cg_fixupSmodelCullDists": "Fixup the static models' cull distance - the calculation in the Linker doesn't treat the smodel scale the same as in runtime",
	"cg_flareVisionSetFadeDuration": "Duration of fade back to normal vision set when you look away from the flare",
	"cg_footprints": "Draw footprint decals and effects",
	"cg_footprintsDebug": "Debug footprint drawing code (0 means no debugging)",
	"cg_footprintsDistortWater": "Distort water on footprint (0 means no distortion)",
	"cg_footsteps": "Play footstep sounds",
	"cg_forceInfrared": "Force using infrared",
	"cg_fov": "The field of view angle in degrees",
	"cg_fov_default": "User default field of view angle in degrees",
	"cg_fov_default_thirdperson": "User default 3rd person field of view angle in degrees",
	"cg_fovExtraCam": "The field of view angle in degrees for the extra cam",
	"cg_fovMin": "The minimum possible field of view",
	"cg_fovScale": "Scale applied to the field of view",
	"cg_friendlyNameFadeIn": "Time in milliseconds to fade in friendly names",
	"cg_friendlyNameFadeOut": "Time in milliseconds to fade out friendly names",
	"cg_fuelHudVersion": "Determines what version of the hud to show",
	"cg_gun_move_f": "Weapon movement forward due to player movement",
	"cg_gun_move_minspeed": "The minimum weapon movement rate",
	"cg_gun_move_r": "Weapon movement right due to player movement",
	"cg_gun_move_rate": "The base weapon movement rate",
	"cg_gun_move_u": "Weapon movement up due to player movement",
	"cg_gun_ofs_f": "Forward weapon offset when prone/ducked",
	"cg_gun_ofs_r": "Right weapon offset when prone/ducked",
	"cg_gun_ofs_u": "Up weapon offset when prone/ducked",
	"cg_gun_rot_minspeed": "The minimum weapon rotation speed",
	"cg_gun_rot_p": "Pitch gun rotation with movement",
	"cg_gun_rot_r": "Gun roll rotation with movement",
	"cg_gun_rot_rate": "The base weapon rotation rate",
	"cg_gun_rot_y": "Yaw gun rotation with movement",
	"cg_gun_x": "x position of the viewmodel",
	"cg_gun_y": "y position of the viewmodel",
	"cg_gun_z": "z position of the viewmodel",
	"cg_headIconMinScreenRadius": "The minumum radius of a head icon on the screen",
	"cg_heliKillCamFarBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"cg_heliKillCamFarBlurDist": "Helicopter kill camera distance above the helicopter.",
	"cg_heliKillCamFarBlurStart": "Helicopter kill camera distance above the helicopter.",
	"cg_heliKillCamFov": "Helicopter kill camera field of view.",
	"cg_heliKillCamNearBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"cg_heliKillCamNearBlurEnd": "Helicopter kill camera distance above the helicopter.",
	"cg_heliKillCamNearBlurStart": "Helicopter kill camera distance above the helicopter.",
	"cg_hudGrenadeIconHeight": "The height of the grenade indicator icon",
	"cg_hudGrenadeIconMaxRangeFlash": "The minimum distance that a flashbang has to be from a player in order to be shown on the grenade indicator",
	"cg_hudGrenadeIconMaxRangeFrag": "The minimum distance that a grenade has to be from a player in order to be shown on the grenade indicator",
	"cg_hudGrenadeIconOffset": "The offset from the center of the screen for a grenade icon",
	"cg_hudGrenadeIconWidth": "The width of the grenade indicator icon",
	"cg_hudGrenadePointerHeight": "The height of the grenade indicator pointer",
	"cg_hudGrenadePointerPivot": "The pivot point of th grenade indicator pointer",
	"cg_hudGrenadePointerWidth": "The width of the grenade indicator pointer",
	"cg_hudMapBorderWidth": "The size of the full map's border, filled by the CG_PLAYER_FULLMAP_BORDER ownerdraw",
	"cg_hudMapFriendlyHeight": "The size of the friendly icon on the full map",
	"cg_hudMapFriendlyWidth": "The size of the friendly icon on the full map",
	"cg_hudMapPlayerHeight": "The size of the player's icon on the full map",
	"cg_hudMapPlayerWidth": "The size of the player's icon on the full map",
	"cg_hudMapRadarLineThickness": "Thickness, relative to the map width, of the radar texture that sweeps across the full screen map",
	"cg_infraredBlur": "Blur amount on the infrared",
	"cg_infraredBlurTime": "Time [in millisecs] that the infrared blur lasts.",
	"cg_InfraredFadeoutTime": "Time [in millisecs] it takes to corpses to fadeout.",
	"cg_infraredFriendlies": "Friendlies in infrared: 0:off 1:heartbeat 2:thermal+heartbeat",
	"cg_infraredUseDefaultMaterial": "Use the default white material when no thermal material is available in infrared",
	"cg_laserSightMaxDistance": "Maximum distance a laser sight dot is drawn.",
	"cg_lastSpectatorSelectedThirdPerson": "Saves last spectator view selected",
	"cg_maxPlayerHighlightTargetSize": "Max size of player target highlights.",
	"cg_microwaveTurretKillCamBackOffset": "Move the killcam to the back of the microwave turret by this much.",
	"cg_microwaveTurretKillCamFov": "Airstrike kill camera field of view.",
	"cg_microwaveTurretKillCamHeightIncrease": "Killcam distance above the microwave turret.",
	"cg_minCullBulletDist": "Don't cull bullet trajectories that are within this distance to you.",
	"cg_missile_FOV": "DEFAULT MISSILE FOV",
	"cg_opticAttachmentViewmodelSwitch": "Zoom factor to switch Optic 1 ADS viewmodel",
	"cg_overheadIconSize": "The maximum size to show overhead icons like rank",
	"cg_overheadNamesFarDist": "The far distance at which name sizes are scaled by cg_overheadNamesFarScale",
	"cg_overheadNamesFarScale": "The amount to scale overhead name sizes at cg_overheadNamesFarDist",
	"cg_overheadNamesGlow": "Glow color for overhead names",
	"cg_overheadNamesMaxDist": "The maximum distance for showing friendly player names",
	"cg_overheadNamesNearDist": "The near distance at which names are full size",
	"cg_overheadNamesSize": "The maximum size to show overhead names",
	"cg_overheadNamesTagUpdateInterval": "How often the friendly visibility head tag is updated for the on screen frustum check",
	"cg_overheadRankSize": "The size to show rank text",
	"cg_playerFrustumHalfHeight": "The radius used to calculate frustum target center for a player. Used for fast 'is on screen' tests",
	"cg_playerHighlightBlinkTime": "The speed (in ms) at which the player highlights blink.",
	"cg_playerHighlightBrightness": "Brightness of highlights.",
	"cg_playerHighlightEnemyColor": "Color of enemy player highlights.",
	"cg_playerHighlightMinFade": "The minimum fade for player highlight blinking.",
	"cg_playerHighlightTargetSize": "Size of player target highlights.",
	"cg_proneFeetCollisionHull": "Enables the use of the extra physics collision hulls on the feet while prone.",
	"cg_rangeFinderActiveColor": "Color for the reticle and display digits on the range finder attachment, when an enemy is spotted.",
	"cg_rangeFinderActiveHeight": "Height of the center area of the screen for which the rangefinder will display diamonds around enemies.",
	"cg_rangeFinderActiveWidth": "Width of the center area of the screen for which the rangefinder will display diamonds around enemies.",
	"cg_rangeFinderDefaultColor": "Default color for the reticle and display digits on the range finder attachment.",
	"cg_rangeFinderDiamondIndicator": "Draw diamond shaped indicators in the rangefinder (otherwise draw brackets around the player's bounding box)",
	"cg_rangeFinderDiamondSize": "Size of the diamond indicator in the rangefinder.",
	"cg_rangeFinderMinEnemySpottingDist": "The distance in feet(world units/12)beyond which the rangeFinder would not change color when an enemy is spotted. -1 means there is no distance limit.",
	"cg_rangeFinderPlayerTargetSize": "Size of player target highlights for the rangefinder.",
	"cg_retrieveHintTime": "Time in milliseconds between the landing of a retrievable object and the start of the pulse shader to hint that the object is retrievable",
	"cg_retrieveHintTimeStuck": "Time in milliseconds between the retrievable object being stuck in an entity and the start of the pulse shader to hint that the object is retrievable",
	"cg_rocketKillCamBackDist": "Rocket kill camera: distance of camera backwards from rocket.",
	"cg_rocketKillCamUpDist": "Rocket kill camera: distance of camera vertically from rocket.",
	"cg_scoreboardMyColor": "The local player's font color when shown in scoreboard",
	"cg_ScoresPing_BgColor": "Background color of ping",
	"cg_ScoresPing_HighColor": "Color for high ping",
	"cg_ScoresPing_Interval": "Number of milliseconds each bar represents",
	"cg_ScoresPing_LowColor": "Color for low ping",
	"cg_ScoresPing_MedColor": "Color for medium ping",
	"cg_scriptedKillCamCloseXYDist": "Scripted kill camera closest distance in front of the bomb.",
	"cg_scriptedKillCamCloseZDist": "Scripted kill camera closest distance above the target.",
	"cg_scriptedKillCamFarBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"cg_scriptedKillCamFarBlurDist": "Scripted kill camera distance above the airplane.",
	"cg_scriptedKillCamFarBlurStart": "Scripted kill camera distance above the airplane.",
	"cg_scriptedKillCamFov": "Scripted kill camera field of view.",
	"cg_scriptedKillCamNearBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"cg_scriptedKillCamNearBlurEnd": "Scripted kill camera distance above the airplane.",
	"cg_scriptedKillCamNearBlurStart": "Scripted kill camera distance above the airplane.",
	"cg_showZombieControls": "Show the zombie controller layout",
	"cg_sonarAttachmentBlur": "Blur amount on the characters in the sonar attachment (MM Wave)",
	"cg_sonarAttachmentCounterColorMultiplier": "Multiplier to 'Player_Color_Multiplier' to reduce player visibility when having immunemms perk",
	"cg_sonarAttachmentCounterMaxSpeed": "Same as cg_sonarAttachmentMaxSpeed, but for players with immunemms perk",
	"cg_sonarAttachmentDistanceFactor": "A factor that makes closer players disappear in higher speeds than farther ones in the sonar attachment (MM Wave)",
	"cg_sonarAttachmentEmpFade": "Time it takes the sonar attachment (MM Wave) when player is hit by EMP",
	"cg_sonarAttachmentFadeFriendlies": "Fade out the friendlies when they move in the sonar attachment (MM Wave).",
	"cg_sonarAttachmentHideFriendlies": "Hide friendlies in the sonar attachment (MM Wave).",
	"cg_sonarAttachmentMaxDist": "Maximum distance that players are visible in the sonar attachment (MM Wave)",
	"cg_sonarAttachmentMaxSpeed": "Minimum speed [units/frame] that will make the player disappear in the sonar attachment (MM Wave)",
	"cg_sonarAttachmentPulseInterval": "Time between the pulses in the sonar attachment (MM Wave)",
	"cg_sonarAttachmentPulseTime": "Amount of time it takes the pulse to travel to max distance in the sonar attachment (MM Wave)",
	"cg_sonarAttachmentSpeedDelay": "Amount of time the players movement distance is accumulated while using the sonar attachment (MM Wave) - smaller values will shorten the transition times",
	"cg_sonarAttachmentSpeedTimeRatio": "Amount of fade out a player will get when moving at max speed in the sonar attachment (MM Wave)",
	"cg_sonarAttachmentZmTurnedFadeTime": "Amount of time a turned human is faded in after the grace period",
	"cg_sonarAttachmentZmTurnedGraceTime": "Amount of time a turned human isn't visible to other zombies",
	"cg_sonarAttachmentZmTurnedMinFade": "The lowest amount of fade a player can have after the grace period",
	"cg_streamLowDetailCamos": "Force the low mips of camo material to always be loaded.",
	"cg_subtitleWidthStandard": "The width of the subtitles in non wide-screen",
	"cg_subtitleWidthWidescreen": "The width of the subtitles in wide-screen",
	"cg_thirdPerson": "Use third person view",
	"cg_thirdPersonAngle": "The angle of the camera from the player in third person view",
	"cg_thirdPersonFocusDist": "The distance infront of the player to aim the 3rd person camera at",
	"cg_thirdPersonMode": "How the camera behaves in third person",
	"cg_thirdPersonRange": "The range of the camera from the player in third person view",
	"cg_timedDamageDuration": "Sets the time to display a damage friendly indicator",
	"cg_treadmarks": "Draw treadmark decals and effects",
	"cg_turretBipodOffset": "Offset bipod mount position on gun by this distance",
	"cg_turretKillCamBackOffset": "Move the camera to the Back of the turret by this much.",
	"cg_turretKillCamCloseXYDist": "Airstrike kill camera closest distance in front of the bomb.",
	"cg_turretKillCamCloseZDist": "Airstrike kill camera closest distance above the target.",
	"cg_turretKillCamFarBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"cg_turretKillCamFarBlurDist": "Airstrike kill camera distance above the airplane.",
	"cg_turretKillCamFarBlurStart": "Airstrike kill camera distance above the airplane.",
	"cg_turretKillCamFov": "Airstrike kill camera field of view.",
	"cg_turretKillCamHeightIncrease": "Airstrike kill camera distance above the airplane.",
	"cg_turretKillCamNearBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"cg_turretKillCamNearBlurEnd": "Airstrike kill camera distance above the airplane.",
	"cg_turretKillCamNearBlurStart": "Airstrike kill camera distance above the airplane.",
	"cg_turretKillCamSideOffset": "Move the camera to the side of the turret by this much.",
	"cg_ufo_scaler": "The speed at which ufo camera moves",
	"cg_use_colored_smoke": "Allow the use of colored smoke grenades",
	"cg_useColorControl": "Enable global color control",
	"cg_useSafeSpectatorCam": "When enabled, use the last known valid player position for the spectator cam, instead of following the player entity.",
	"cg_useWeaponBasedVariableZoom": "Use weapon based variable zoom instead of player based.",
	"cg_useWeaponSwitchReloadCancel": "Allow weapon switch to cancel reload",
	"cg_usingClientScripts": "True, if client scripts are enabled.",
	"cg_usNewEventQueueScheme": "Rewinds to last EV_ENT_SPAWNED_SENTINEL when ent is new, if true - otherwise just sets lastEvent to currentEvent.",
	"cg_VelocityArrow_MaxSegmentLength": "The maximum length of a segment",
	"cg_VelocityArrow_MinSegmentLength": "The minimum length of a segment",
	"cg_VelocityArrow_RateOfChange": "The minimum rate of change required to force a segment split",
	"cg_viewVehicleInfluenceGunner": "The influence on the view from being a vehicle gunner",
	"cg_viewVehicleInfluenceGunnerFiring": "The influence on the view from being a vehicle gunner while firing",
	"cg_viewZSmoothingMax": "Threshhold for the maximum smoothing distance we'll do",
	"cg_viewZSmoothingMin": "Threshhold for the minimum smoothing distance it must move to smooth",
	"cg_viewZSmoothingTime": "Amount of time to spread the smoothing over",
	"cg_visionSetLerpMaxDecreasePerFrame": "cg_visionSetLerpMaxIncreasePerFrame",
	"cg_visionSetLerpMaxIncreasePerFrame": "Maximum jump of customlerp between 2 frames, used for smoothing for flare visionset",
	"cg_watersheeting": "Enables/disables the watersheeting fullscreen effect",
	"cg_weaponHeat": "Force the heat of all weapon (for infrared)",
	"cg_weaponHintsCoD1Style": "Draw weapon hints in CoD1 style: with the weapon name, and with the icon below",
	"cl_bspmismatchFatal": "If true client will ERR_DROP if its BSP doesn't match the server's",
	"cl_connectionAttempts": "Maximum number of connection attempts before aborting",
	"cl_connectTimeout": "Timeout time in seconds while connecting to a server",
	"cl_deathMessageWidth": "Pixel width of the obituary area",
	"cl_freelook": "Enable looking with mouse",
	"cl_ingame": "True if the game is active",
	"cl_leanCountMin": "Keep stats of lean use",
	"cl_maxppf": "Maximum servers to ping per frame in server browser",
	"cl_migrationPingTime": "how many seconds between client pings.  used to determine hosting suitability.",
	"cl_motdString": "Message of the day",
	"cl_mouseAccel": "Mouse acceleration",
	"cl_nodelta": "The server does not send snapshot deltas",
	"cl_paused": "Pause the game",
	"cl_profileWriteLimiter": "Limits how frequently the profile will be written",
	"cl_splitscreenGamestateHack": "If true non-primary local clients wait until the primary local client has parsed the gamestate. See DT#93624",
	"cl_timeout": "Seconds with no received packets until a timeout occurs",
	"cl_voice": "Use voice communications",
	"clancard_clanid": "Clan id for the clancard to be displayed.",
	"classVersionNumber": "Version number for the class loadouts",
	"ClickToContinue": "nextarena",
	"com_desiredMenu": "Target menu to navigate to when possible",
	"com_freemoveScale": "Scale how fast you move in com_freemove mode",
	"com_introPlayed": "Intro movie has been played",
	"com_maxclients": "Maximum amount of clients on the server",
	"com_maxfps": "Cap frames per second",
	"com_report_syserrors": "Enable syserror reporting",
	"com_statmon": "Draw stats monitor",
	"com_timescale": "Scale time of each frame",
	"com_voip_resume_time": "Time at which voip can resume",
	"compass": "Display Compass",
	"compassClampIcons": "If true, friendlies and enemy pings clamp to the edge of the radar.  If false, they disappear off the edge.",
	"compassEnableColorBlindPlayerIcons": "Checks if we should draw the player arrows in color blind colors.shoutcastHighlightedClient",
	"compassEnemyFootstepEnabled": "Enables enemies showing on the compass because of moving rapidly nearby.",
	"compassEnemyFootstepMaxRange": "The maximum distance at which an enemy may appear on the compass due to 'footsteps",
	"compassEnemyFootstepMaxZ": "The maximum vertical distance enemy may be from the player and appear on the compass due to 'footsteps",
	"compassEnemyFootstepMinSpeed": "The minimum speed an enemy must be moving to appear on the compass due to 'footsteps",
	"compassForcePlayerIcon": "Forces the player to always show as compassping_player on the compass.",
	"compassGridAlign": "Position of letter and number in grid.",
	"compassGridCols": "Grid column count.",
	"compassGridEnabled": "Enables compass grid.",
	"compassGridRows": "Grid row count.",
	"compassLocalRadarRadius": "Maximum radius of the local radar",
	"compassLocalRadarUpdateTime": "Time between local radar updates",
	"compassMaxRange": "The maximum range from the player in world space that objects will be shown on the compass",
	"compassMinRadius": "The minimum radius from the center of the compass that objects will appear.",
	"compassMinRange": "The minimum range from the player in world space that objects will appear on the compass",
	"compassObjectiveDetailDist": "When an objective is closer than this distance (in meters), the icon will not be drawn on the tickertape.",
	"compassObjectiveHeight": "compassObjectiveWidth",
	"compassObjectiveMaxHeight": "The maximum height that an objective is considered to be on this level",
	"compassObjectiveMinDistRange": "The distance that objective transition effects play over, centered on compassObjectiveNearbyDist.",
	"compassObjectiveMinHeight": "The minimum height that an objective is considered to be on this level",
	"compassObjectiveNearbyDist": "When an objective is closer than this distance (in meters), an 'Objective Nearby' type of indicator is shown.",
	"compassObjectiveWidth": "The size of the objective on the compass",
	"compassRadarLineThickness": "Thickness, relative to the compass size, of the radar texture that sweeps across the map",
	"compassRadarPingFadeTime": "How long an enemy is visible on the compass after it is detected by radar",
	"compassRadarUpdateFastTime": "Time between radar updates for fast update killstreak",
	"compassRadarUpdateTime": "Time between radar updates",
	"compassSatellitePingFadeTime": "How long an enemy is visible on the compass after it is detected by Satellite",
	"compassSatelliteScanTime": "Time taken for Satellite t scans",
	"compassSatelliteStaticImageFadeTime": "How long the static image is visible on the compass after it is detected by Satellite",
	"compassShowEnemies": "Enables enemies showing on the compass.",
	"compassSoundPingFadeTime": "The time in seconds for the sound overlay on the compass to fade",
	"compassStaticImageUpdateTime": "Time between static image updates",
	"con_typewriterColorBase": "Base color of typewritten objective text.",
	"content_trialcontentpackbits": "This is the ORed value of all the packages content bits that are available for trial.",
	"counterDownloadInterval": "Number of minutes before all the global counters are downloaded",
	"counterUploadInterval": "Number of minutes before all the global counters are uploaded",
	"creditsScrollScale": "credits scroll speed",
	"currentTUVersion": "tu17",
	"customGameMode": "0 for no custom game mode, 1 if built in, 2 if user created custom game mode.",
	"debug_protocol": "scr_numLives",
	"debug_show_viewpos": "quit_on_error",
	"debugRenderCollisionDistance": "Distance to render debug brushes and patches",
	"debugRenderMask": "Mask for collision rendering",
	"defaultDamageDuration": "default duration in milliseconds that damage should continue to get delivered",
	"defaultDamageInterval": "default interval in milliseconds that damage should continue to get delivered",
	"defaultHitDamage": "default initial damage delivered by getting hit by a flame ball",
	"demo_bookmarkEventThresholdTime": "The time duration for which we want to show the bookmark event image in the demo timeline.",
	"demo_bytesPerSecondMax": "Max amount of bytes to send per second before throttling.",
	"demo_bytesPerSecondMin": "Min amount of bytes to send per second before throttling.",
	"demo_client": "Current viewing player",
	"demo_dollycamHighlightThreshholdDistance": "Maximum distance between the marker point and the current camera for it to be treated as highlighted.",
	"demo_dollycamMarkerInformationFarDist": "The far distance at which dolly cam marker text sizes stop scaling down",
	"demo_dollycamMarkerInformationFarScale": "The amount to scale overhead dolly cam marker text sizes at demo_dollycamMarkerInformationFarDist",
	"demo_dollycamMarkerInformationNearDist": "The near distance at which dolly cam marker text is full size",
	"demo_dollycamMarkerInformationThreshholdDistance": "Maximum distance between the marker point and the current camera for its information to be drawn.",
	"demo_dollycamMarkerTimeScaleMode": "The timescale mode of the selected marker. Used by the menus for tweaking.",
	"demo_dollycamMarkerTimeScaleValue": "The timescale value of the selected marker. Used by the menus for tweaking.",
	"demo_dollycamTrackWidth": "The width of the dollycam track.",
	"demo_downloadStreamDataBlockRequestSize": "demo_downloadStreamDataBlockThrottleTime",
	"demo_downloadStreamDataBlockThrottleTime": "The maximum amount of time (in msec) we can wait before triggering the download of the next data block.",
	"demo_downloadStreamMaxRetryAttemps": "The maximum number of retry attempts before we mark the downloadstream as failed..",
	"demo_downloadStreamRetryWaitTime": "The maximum amount of time (in msec) we will have to wait before we retry the download.",
	"demo_downloadStreamThrottleTime": "The maximum amount of time (in msec) we can starve the download stream callback.",
	"demo_enableClipRecordEvent": "Enables recording of events for clips.",
	"demo_enabled": "Used to turn the system on/off.",
	"demo_enableSvBandwidthLimitThrottle": "Used to enable the server bandwidth based throttling system.",
	"demo_errormessage": "Most recent demo error's message.",
	"demo_errortitle": "Most recent demo error's title.",
	"demo_extraNetworkProfileData": "Enables recording extra profile data into demo snapshots.",
	"demo_filesizeLimit": "The maximum filesize (in MB) of the demos which we support.",
	"demo_freeCameraLockOnHighlightThreshholdDistance": "Maximum distance between the entity and the current camera for it to be treated as highlighted.",
	"demo_freeCameraLockOnOrbitRadius": "Radius of the lockon orbit.",
	"demo_freeCameraShowLockableObjectsAlways": "Used to decide whether we want to display a highlight for a lockable object.",
	"demo_highlightReelGameResultFilter": "Demo highlight reel round outcome filter.",
	"demo_highlightReelMinimumStarsFilter": "Minimum stars used for the filtering of events in the highlight.",
	"demo_highlightReelNumberOfSegments": "Demo Highlight Reel number of segments",
	"demo_highlightReelPlayerFilter": "Demo Highlight Reel player filter control",
	"demo_highlightReelStylesFilter": "Demo Highlight Reel styles filter control",
	"demo_highlightReelTransitionFilter": "Demo Highlight Reel transition filter control",
	"demo_inGameThrottleBandwitdhPercent": "Bandwidth percent to be released when we are not going to throttle inside the game.",
	"demo_inLobbyThrottleBandwitdhPercent": "Bandwidth percent to be released when we are not going to throttle in the lobby.",
	"demo_keyframerate": "Used to specify the rate(in sec) at which we generate a keyframe during playback.",
	"demo_matchRecordEventOnPlaylists": "Bit Mask of playlist IDs on which to do a recordEvent upon match completion.",
	"demo_maxTimeScale": "The maximum timescale rate we will support.",
	"demo_packetsPerSecondMax": "Max amount of packets to send per second before throttling.",
	"demo_packetsPerSecondMin": "Min amount of packets to send per second before throttling.",
	"demo_pause": "demo_timeline_bookmark",
	"demo_pauseOnNextSnapshot": "Used to jump to the next snapshot during network analysis.",
	"demo_recordingrate": "Used to tweak the rate(in msec) at which we write a super snapshot",
	"demo_recordPrivateMatch": "Used to turn the private match recording on/off.",
	"demo_recordStaticEntityPositions": "Experimentation with evaluating the trajectory of entities and writing them as a static position, as opposed to letting the client to evaluate.",
	"demo_refreshDollyCamFxEveryFrame": "Used to toggle the refreshing of the dollycam marker every frame.demo_enableDollyCam",
	"demo_save_smp": "Used to toggle threaded save for the demo system.",
	"demo_selectedSegmentIndex": "Used in the Manage Segments UI. This will be used to know which segment index we have selected.",
	"demo_streamingAdjustmentFactor": "The adjustment factor for howScrewedAreWe in the streaming.",
	"demo_streamingSendSocketBuffSizeForOtherUploads": "The send socket buffer size which will be used for other uploads",
	"demo_streamingSendSocketBuffSizeForRecording": "The send socket buffer size which will be used for recording",
	"demo_streamUploadKeepAliveFrequency": "Specifies the frequency that we send the keep alive on the upload connection if we are otherwise starved for data to send (0 means not in use), used mainly to account for zombiemode pause.",
	"demo_svBandwidthLimitThrottleMaxBytesPercent": "The percentage of the max. bandwidth per frame within which we want to apply the throttle.",
	"demo_svBandwidthLimitThrottleTimeout": "The maximum amount of time (in msec) we can starve the write to stream callback, due to the server hitting the maximum bandwidth limit per frame.",
	"demo_useCinematicsBuffer": "Used cinematics buffer for downloading demo files on the PS3",
	"demoRenderDuration": "Max duration in seconds of a clip that can be rendered.",
	"demoRenderSizeX": "Width of the demo render.",
	"demoRenderSizeY": "Height of the demo render.",
	"developer": "Turn on Development systems",
	"developer_script": "Enable developer script comments",
	"disable_rope": "Disables the rope system",
	"disable_vcs": "Disables VCS",
	"disable_vcs_viewmodel": "Disables VCS viewmodel in the VCS UI menu",
	"disableAllTheEliteThings": "Disable all the things related to Elite",
	"disableHost_matchesHostedRatio": "Required match hosted completion/failure ratio. 0 is off.",
	"disableHost_matchesHostedStreak": "disableHost_matchesPlayedRatio",
	"disableHost_matchesPlayedRatio": "Required match played completion/failure ratio. 0 is off.",
	"disableHost_matchesPlayedStreak": "disableHost_matchesHostedStreak",
	"disableLookAtEntityLogic": "Disables the Player_UpdateLookAtEntity logic (expensive)",
	"disconnected_ctrls": "String representing the disconnected controllers",
	"dlc3_zm_ai_lookAheadAllowBackTrack": "allow backtrack when doing Path_UpdateLookahead",
	"dlc3_zm_ai_lookAheadAllowRestore": "allow restore when doing Path_UpdateLookahead",
	"dog_MeleeDamage": "Controls the damage done when dogs attack.",
	"dog_turn180_angle": "If the dog needs to turn at this angle or greater, he'll execute the 180-degree turn animation",
	"dog_turn90_angle": "If the dog needs to turn at this angle or greater, he'll execute the 90-degree turn animation",
	"dog_turn_min_goal_dist": "If the dog is at this distance or less to it's goal, it wont execute any turn animations",
	"door_breach_weapondrop": "Turn on/off the waepon drop/rise for during door breach",
	"doublescreen": "Command line option to enable double screen",
	"doublesided_raycasts": "turn on double sided ray casts",
	"dtp": "Turn on/off the dive to prone functionality",
	"dtp_exhaustion_window": "dtp_fall_damage_max_height",
	"dtp_fall_damage_max_height": "If the player dives to prone from more than this dvar value, he will receive kill damage",
	"dtp_fall_damage_min_height": "If the player dive to prone from less than this dvar value, he will not receive any kill damage",
	"dtp_max_apex_duration": "Determines the max time in milliseconds the dtp will spend at the apex of the jump",
	"dtp_max_slide_addition": "Additional slide time should the player land on a mantle-able surface",
	"dtp_max_slide_duration": "Determines the max time the slide portion of the dtp move will take",
	"dtp_min_speed": "Minimum player speed required to start a DTP or sustain a DTP",
	"dtp_new_trajectory": "Use new dive to prone trajectory",
	"dtp_new_trajectory_multiplier": "New dive to prone trajectory modifier",
	"dtp_post_move_pause": "Duration of the post move pause",
	"dtp_startup_delay": "Determines how long the player has to sprint before the dtp move can trigger",
	"dw_active": "Pumps Live_Frame() (and hence DW) if true",
	"dw_connectafterlogin": "Whether to connect the user after login.",
	"dw_defaultDTLSAssociationTimeout": "dw_connectafterlogin",
	"dw_dupe_key": "True if key-in-use message from Demonware",
	"dw_party_active": "Pumps Party_Frame (and hence DW lobby) if true",
	"dw_popup": "Online services popup",
	"dwFileFetchTryIntervalBase": "Delay in seconds after file fetch fails to the next retry.  Exponential growth each retry.",
	"dwFileFetchTryIntervalMax": "Max delay in seconds between file fetch tries.",
	"dwFileFetchTryMaxAttempts": "Max retry attempts before stopping altogether.",
	"dwStreamingSendSocketBuffSize": "The maximum socket streaming packet for the HTTP transactions. Used in dwFileShareWriteFile()",
	"dynEnt_bulletForce": "Force applied from bullet hit",
	"dynEnt_damageRadiusScale": "Scale applied to radius for radius damage",
	"dynEnt_explodeForce": "Force applied from explosion hit",
	"dynEnt_explodeMaxEnts": "The maximum number of dynents that can be awakened by one explosion",
	"dynEnt_explodeMinForce": "Force below which dynents won't even bother waking up",
	"dynEnt_explodeSpinScale": "Scale of the random offset from the center of mass for explosion forces.",
	"dynEnt_explodeUpbias": "Upward bias applied to force directions from explosion hits",
	"dynEnt_shouldCullEntitiesForSplitscreen": "Cull alternating entities in splitscreen",
	"dynEnt_spawnedLimit": "The max number of extra dynents (not placed on Radiant, spawned from script, or destructibles)",
	"dynEntPieces_angularVelocity": "Initial breakable pieces angular velocity",
	"dynEntPieces_impactForce": "Force applied when breakable is destroyed",
	"dynEntPieces_velocity": "Initial breakable pieces velocity",
	"emblemImageUpload": "Toggles emblemImage upload",
	"enable_global_wind": "enable wind effect",
	"enable_grass_wind": "enable grass wind effect",
	"enable_moving_paths": "enable moving paths",
	"enable_new_prone_check": "enable new prone check",
	"enableERegErrorRecording": "Record all Elite Reg errors to recordEvent",
	"enableJapaneseElite": "Enable Elite for Japanese",
	"enableUCDErrorRecording": "Record all UCD errors to recordEvent",
	"excellentPing": "Anything less than this is consider excellent",
	"exp_softclip": "soft clip value",
	"fbEnabled": "FB Enabled",
	"fixedtime": "Use a fixed time rate for each frame",
	"fixedtime_float": "fixedtime",
	"fixNegativeLosses": "Fix negative losses in combat record",
	"flame_config_valid": "Internal use only",
	"flame_debug_render": "Turn on/off Flamethrower debug rendering",
	"flame_kick_offset": "Origin offset for flamethrower view model while firing.",
	"flame_kick_recover_speed": "Speed at which the flamethrower view model transitions back from flame_kick_offset.",
	"flame_kick_speed": "Speed at which the flamethrower view model transitions to flame_kick_offset.",
	"flame_render": "Turn on/off Flamethrower rendering",
	"flame_system_enabled": "Enable/Disable the flame system",
	"flame_team_damage": "Turn on/off Flamethrower damage to friendlies",
	"flame_test": "Turn on/off Flamethrower testing",
	"flame_use_dvars": "Turn on/off use of dvars for flamethrower behavior",
	"flareDisableEffects": "nightVisionDisableEffects",
	"footstep_sounds_cutoff": "Footstep sounds distance cuttoff",
	"friction": "bounch",
	"fs_basegame": "Base game name",
	"fs_basepath": "Base game path",
	"fs_cdpath": "CD path",
	"fs_copyfiles": "Copy all used files to another location",
	"fs_debug": "Output debugging information for the file system",
	"fs_game": "Game data directory. Must be '' or a sub directory of 'mods/'.",
	"fs_homepath": "Game home path",
	"fs_ignoreLocalized": "Ignore localized files",
	"fs_restrict": "Restrict file access for demos etc.",
	"fs_usedevdir": "Use development directories.",
	"fs_userDocuments": "user documents path(screenshots).",
	"fs_usermapdir": "Usermap data directory.",
	"fshCustomGameName": "Name of the game downloaded into the custom game lobby",
	"fshElite": "Premium fileshare experience for all users when set.",
	"fshEnableRender": "Turn on or off the ability to render clips.",
	"fshFileDebug": "Show file IDs instead of file names in CODTV",
	"fshMtxName": "mtx_storage",
	"fshRecentsXUID": "Override recent games to come from this player instead",
	"fshRenderSuccessURL": "https://elite.callofduty.com/elitetv",
	"fshRenderWriteTimeout": "DW http upload thread timeout to prevent an upload freeze",
	"fshRetryDelay": "Delay after which a failed fileshare fetch will be retried",
	"fshSearchTaskDelay": "Gap in milliseconds between file share search tasks.",
	"fshSkipFileStats": "Skip fetching file votes and views",
	"fshStaffXuid": "2535285330711699",
	"fshSummaryDelay": "Delay between summary tasks. Tweak to ensure no BD_TOO_MANY_TASKS.",
	"fshThrottleEnabled": "Whether the dcache upload throttling is enabled.",
	"fshThrottleKBytesPerSec": "Dcache upload throttle limit in K Bytes per second.",
	"g_actorAndVehicleAntilag": "Enable singleplayer/co-op antilag",
	"g_actorAndVehicleAntilagDebug": "Render singleplayer/co-op antilag debugging info",
	"g_ai": "Enable AI",
	"g_aiEventDump": "Print AI events happening for this entity",
	"g_allowVote": "Enable voting on this server",
	"g_avoidEnabled": "Disable the vehicle avoidance",
	"g_banIPs": "IP addresses to ban from playing",
	"g_broadcastLocalSound": "Broadcast local sound commands to spectators",
	"g_compassShowEnemies": "Whether enemies are visible on the compass at all times",
	"g_connectpaths": "Connect paths",
	"g_customTeamName_Allies": "User assigned allied team name",
	"g_customTeamName_Axis": "User assigned axis team name",
	"g_customTeamName_Three": "User assigned three team name",
	"g_debugBullets": "Show debug information for bullets",
	"g_debugDamage": "Show debug information for damage",
	"g_debugLocDamage": "Turn on debugging information for locational damage (2 = show results of bullet trace pose only)",
	"g_debugLocDamageEntity": "Write animation commands debug info for this entity",
	"g_debugLocHit": "Display locational damage info for an entity when the entity is hit",
	"g_debugLocHitTime": "Time duration of g_debugLocHit lines",
	"g_disableDemonwareSubscriptionRefresh": "disables refreshing of Demonware's first party subscription values.",
	"g_disableEliteButton": "disables main lobby elite button",
	"g_disableEliteEmblemUploads": "disables Elite emblem uploads",
	"g_disableEliteRegistrationPopup": "disables Elite registration popup",
	"g_disablePlatformAutofill": "disables platform autofill functionality",
	"g_dumpAnims": "Animation debugging info for the given character number",
	"g_dumpAnimsCommands": "g_dumpAnims",
	"g_entinfo": "Display entity information",
	"g_entinfo_AItext": "Type of text information for AI entinfo",
	"g_entinfo_maxdist": "Maximum distance of an entity from the camera at which to show entity information",
	"g_entinfo_scale": "Scale of the entity information text",
	"g_entinfo_type": "Type of entities to display information",
	"g_erroronpathsnotconnected": "Errors out during load if paths are not connected.",
	"g_fogColorReadOnly": "Fog color that was set in the most recent call to 'setexpfog'",
	"g_fogHalfDistReadOnly": "Fog start distance that was set in the most recent call to 'setexpfog'",
	"g_fogStartDistReadOnly": "Fog start distance that was set in the most recent call to 'setexpfog'",
	"g_friendlyfireDist": "Maximum range for disabling fire at a friendly",
	"g_friendlyNameDist": "Maximum range for seeing a friendly's name",
	"g_gametype": "sv_hostname",
	"g_ignoreVisData": "Do not generate or save the vis data on the nodes",
	"g_inactivity": "Time delay before player is kicked for inactivity",
	"g_knockback": "Maximum knockback",
	"g_lagged_damage_threshold": "Threshold (ms) beyond which we will report a damaged lagged client to the tracker leaderboards.",
	"g_loadScripts": "Disable scripts from loading",
	"g_log": "games_mp.log",
	"g_logSync": "Enable synchronous logging",
	"g_logTimeStampInSeconds": "Enable logging with time stamps in seconds since UTC 1/1/1970",
	"g_mantleBlockTimeBuffer": "Time that the client think is delayed after mantling",
	"g_maxDroppedWeapons": "Maximum number of dropped weapons",
	"g_maxElapsedTime_Before_ERegPopup": "max elapsed time before ERegPopup",
	"g_maxERegPopupsShown": "max # of ERegPopups possible",
	"g_minElapsedTime_Before_ERegPopup": "min elapsed time before ERegPopup",
	"g_minElapsedTime_Before_RefreshUCDAccountStatus": "min elapsed time before refreshing UCDAccountStatus",
	"g_minGrenadeDamageSpeed": "Minimum speed at which getting hit be a grenade will do damage (not the grenade explosion damage)",
	"g_minNumLogins_Before_ERegPopup": "num logins before ERegPopup",
	"g_motd": "The message of the day",
	"g_no_script_spam": "Turn off script debugging info",
	"g_password": "Password",
	"g_quadrotorFlyHeight": "Default fly height of the quadrotors",
	"g_redCrosshairs": "Whether red crosshairs are enabled",
	"g_removeRedundantLinks": "Remove redundant links from path graph",
	"g_ScoresColor_Allies": "Allies team color on scoreboard",
	"g_ScoresColor_Axis": "Axis team color on scoreboard",
	"g_ScoresColor_EnemyTeam": "Enemy team color on scoreboard",
	"g_ScoresColor_Free": "Free Team color on scoreboard",
	"g_ScoresColor_MyTeam": "Player team color on scoreboard",
	"g_ScoresColor_Spectator": "Spectator team color on scoreboard",
	"g_spawnai": "Enable AI spawning",
	"g_speed": "Player speed",
	"g_synchronousClients": "Client is synchronized to the server - allows smooth demos",
	"g_TeamColor_Allies": "Allies team color",
	"g_TeamColor_Axis": "Axis team color",
	"g_TeamColor_EnemyTeam": "Enemy team color",
	"g_TeamColor_EnemyTeamAlt": "Enemy team color",
	"g_TeamColor_Free": "Free Team color",
	"g_TeamColor_MyTeam": "Player team color",
	"g_TeamColor_MyTeamAlt": "Player team color",
	"g_TeamColor_MyTeamAlt_Party": "Player team color",
	"g_TeamColor_Party": "Party color",
	"g_TeamColor_Spectator": "Spectator team color",
	"g_TeamIcon_Allies": "hader name for the allied scores banner",
	"g_TeamIcon_Axis": "Shader name for the axis scores banner",
	"g_TeamIcon_Free": "Shader name for the scores of players with no team",
	"g_TeamIcon_Spectator": "Shader name for the scores of players who are spectators",
	"g_TeamName_Allies": "Allied team name",
	"g_TeamName_Axis": "Axis team name",
	"g_TeamName_Three": "Three team name",
	"g_turretBipodOffset": "Offset bipod mount position on gun by this distance",
	"g_turretServerPitchMax": "Limit turret pitch range on server (visual only)",
	"g_turretServerPitchMin": "Limit turret pitch range on server (visual only)",
	"g_useholdspawndelay": "Time in milliseconds that the player is unable to 'use'",
	"g_vehicleDebug": "Turn on debug information for vehicles",
	"g_vehicleDrawPath": "Turn on debug information for vehicle paths",
	"g_vehicleDrawSplines": "Draws the vehicles splines",
	"g_vehiclePlaneCurveTime": "Time between start and end nodes for curves [used in AI planes on curves]",
	"gamedate": "May 5 2014",
	"gamename": "Call of Duty®",
	"geographicalMatchmakingOverride": "Geographical Matchmaking Override : None, All Preferred or Foreign Preferred",
	"goodPing": "Anything less thant this is considered decent",
	"grenade_indicators_enabled": "Enables grenade indicators",
	"grenadeBounceRestitutionMax": "Cap to keep code from increasing bounce restitution too high.",
	"grenadeBumpFreq": "How likely (per server frame) a bump will occur",
	"grenadeBumpMag": "Size of bumps (as a fraction of the grenade's current speed)",
	"grenadeBumpMax": "Maximum upward speed of a bump (inches/sec)",
	"grenadeCurveMax": "Largest rolling curvature (will be random between +/- this value)grenadeWobbleSideDamp",
	"grenadeFrictionHigh": "The amount of friction (0 to 1) for fast-moving grenades",
	"grenadeFrictionLow": "The amount of friction (0 to 1) for slower/rolling grenades",
	"grenadeFrictionMaxThresh": "The speed threshold that determines whether to use grenadeFrictionLow/High",
	"grenadeRestThreshold": "The speed threshold below which grenades will come to rest",
	"grenadeRollingEnabled": "Enables the new 'rolling' grenade behavior",
	"grenadeWobbleFreq": "Wobble cycles per inch of rolling distance (approx)",
	"grenadeWobbleFwdMag": "The forward rolling speed will oscillate +/- this amount",
	"grenadeWobbleSideMag": "The distance to wobble left and right",
	"groupDownloadInterval": "Minimum interval to wait before getting new group counts",
	"groupUploadInterval": "Minimum interval to wait before setting new group counts",
	"gts_validation_enabled": "Enables gametype settings validation in online modes",
	"hatch_mantle_fwd": "hatch_mantle_fwd",
	"hatch_mantle_up": "hatch_mantle_up",
	"hiDef": "True if the game video is running in high-def.",
	"highlightedPlayerName": "Currently highlighted player name.",
	"hudElemPausedBrightness": "Brightness of the hudelems when the game is paused.",
	"ik_ai_hand_get_data": "Turn this on to print current hand bone data to the consol",
	"ik_ai_hand_offset_vec": "Offset vector for hand tuning",
	"ik_ai_hand_rotation_vec": "Rotation vector for hand tuning",
	"ik_ai_hand_tuning": "Turn on/off AI hand IK tuning. 1 = Use anim flag. 2 = Force on for all anims. 3 = Force on and apply devgui offsets.",
	"ik_ai_pool_size": "Determines how many AI are allowed to use IK systems at once.",
	"ik_ai_range_max": "Determines the range within which the AI are allowed to use IK systems",
	"ik_debug": "Set to one of the IK debug values in ik_types.h",
	"ik_dvar_ai_aim_tracking_rate": "Determines the speed at which the AI tracks the aim target (lower is faster)",
	"ik_dvar_lookatentity_eyes_scale": "Values less than 1.0 will reduce the amount that the eyes 'lock' onto their target",
	"ik_dvar_lookatentity_notorso": "No torso deformation in lookatentity transforms",
	"ik_dvar_lookatentity_tracking_rate": "Determines the speed at which the head tracks the looking angle (lower is faster)",
	"ik_dvar_lookatpos_eyes_scale": "Values less than 1.0 will reduce the amount that the eyes 'lock' onto their target",
	"ik_dvar_lookatpos_notorso": "No torso deformation in lookatpos transforms",
	"ik_dvar_lookatpos_tracking_rate": "Determines the speed at which the head tracks the looking angle (lower is faster)",
	"ik_enable": "Turn on/off IK",
	"ik_enable_ai_hand": "Turn on/off AI hand IK",
	"ik_enable_ai_terrain": "Turn on/off AI terrain IK (0 = OFF, 1 = Heros, 2 = ALL)",
	"ik_enable_player_hand": "Turn on/off player hand IK",
	"ik_enable_player_terrain": "Turn on/off player terrain IK",
	"ik_foot_test": "Turn on/off IK foot test",
	"ik_hand_test": "Turn on/off IK hand test",
	"ik_left_hand_lerp_test": "Turn on/off left-hand lerp test",
	"ik_lookatentity_head_scale": "Adjust the amount of rotation that is applied during head/eye tracking",
	"ik_lookatpos_head_scale": "Adjust the amount of rotation that is applied during head/eye tracking",
	"ik_paranoid_matrix_checks": "Turn on/off THOROUGH matrix validity checks",
	"ik_pelvis_test": "Turn on/off IK pelvis test",
	"ik_pitch_limit_max": "Pitch angle at which headtracking is entirely constrained",
	"ik_pitch_limit_thresh": "Pitch angle at which headtracking starts to be constrained",
	"ik_right_hand_lerp_test": "Turn on/off right-hand lerp test",
	"ik_roll_limit_max": "Roll angle at which headtracking is entirely constrained",
	"ik_roll_limit_thresh": "Roll angle at which headtracking starts to be constrained",
	"ik_yaw_limit_max": "Yaw angle at which headtracking is entirely constrained",
	"ik_yaw_limit_thresh": "Yaw angle at which headtracking starts to be constrained",
	"invite_waitPeriod": "time in msec you have to wait between sending invites to the same friend",
	"inviteText": "Text to display for the game invite",
	"jump_height": "The maximum height of a player's jump",
	"jump_ladderPushVel": "The velocity of a jump off of a ladder",
	"jump_slowdownEnable": "Slow player movement after jumping",
	"jump_spreadAdd": "The amount of spread scale to add as a side effect of jumping",
	"jump_stepSize": "The maximum step up to the top of a jump arc",
	"killOnlyTrailFX": "Kill only trail FX on host migration",
	"lagometer_pos": "lagometer position",
	"laserAlpha": "Laser Beam Alpha.",
	"laserDebug": "Enables the display of various debug info.",
	"laserEndOffset": "How far from the point of collision the end of the beam is.",
	"laserFadeADS": "Whether to draw the light emitted from a laser (not the laser itself)",
	"laserFlarePct": "Percentage laser widens over distance from viewer.",
	"laserFlarePct_alt": "Percentage laser widens over distance from viewer.",
	"laserLightBeginOffset": "How far from the true beginning of the beam the light at the beginning is.",
	"laserLightBodyTweak": "Amount to add to length of beam for light when laser hits a body (for hitboxes).",
	"laserLightEndOffset": "How far from the true end of the beam the light at the end is.",
	"laserLightRadius": "The radius of the light at the far end of a laser beam",
	"laserLightRadius_alt": "The radius of the light at the far end of a laser beam",
	"laserLightRangePlayer": "The maximum range of the player's laser light (is less than laserRangePlayer then not used)",
	"laserLightWithoutNightvision": "Whether to draw the light emitted from a laser (not the laser itself) when nightvision is off. Player always gets light.",
	"laserRadius": "The size (radius) of a laser beam",
	"laserRadius_alt": "The size (radius) of a laser beam",
	"laserRange": "The maximum range of a laser beam",
	"laserRange_alt": "The maximum range of a laser beam",
	"laserRangePlayer": "The maximum range of the player's laser beam",
	"lbTaskDelay": "LB task throttle delay",
	"league_defaultPlaylistID": "The default playlist to select if the player has never played leagues before",
	"league_forcePreSeason": "Force all leagues to preseason mode.",
	"league_friendsRefetchTime": "Time in minutes before refetching league friends data.",
	"league_historyInfoRefetchTime": "Time in milliseconds before refetching league history info.",
	"league_leaderboardRefetchTime": "Time in milliseconds before refetching league leaderboard data for a given team and a subdivision.",
	"league_teamLeagueInfoRefetchTime": "Time in milliseconds before refetching team league and subdivision info.",
	"leagueLoserBonus": "League Loser Bonus XP",
	"leagueWinnerBonus": "League Winner Bonus XP",
	"live_readPublisherStorageLocally": "Read publisher storage locally, instead of from the Xbox Live server",
	"live_startmatchDeadline": "Deadline in seconds before we kick everyone to find a better session",
	"live_statscaching": "If true will cache statchanged msgs from server and apply atomically",
	"live_testValue": "A dvar used for testing",
	"live_useTwitch": "Use twitch",
	"live_useTwitter": "Use twitter",
	"live_useYouTube": "Use YouTube",
	"liveVoteErrorBackoff": "Backoff time if a vote history page task fails",
	"liveVoteTaskDelay": "Delay between consequent vote history page tasks",
	"loc_forceEnglish": "Force english localized strings",
	"loc_language": "Language",
	"loc_warnings": "Enable localization warnings",
	"loc_warningsAsErrors": "Throw an error for any unlocalized string",
	"log_append": "Open log file in append mode",
	"logfile": "Write to log file - 0 = disabled, 1 = async file write, 2 = Sync every write",
	"long_blocking_call": "Enable SCR_DrawPleaseWait dialog",
	"lowAmmoWarningColor1": "Color 1 of 2 to oscilate between",
	"lowAmmoWarningColor2": "Color 2 of 2 to oscilate between",
	"lowAmmoWarningNoAmmoColor1": "Like lowAmmoWarningColor1, but when no ammo.",
	"lowAmmoWarningNoAmmoColor2": "lowAmmoWarningColor2, but when no ammo.",
	"lowAmmoWarningNoReloadColor1": "Like lowAmmoWarningColor1, but when no ammo to reload with.",
	"lowAmmoWarningNoReloadColor2": "lowAmmoWarningColor2, but when no ammo to reload with.",
	"lui_checksum_enabled": "Enables LUI checksums",
	"lui_disable_blur": "Disable LUI blur",
	"lui_error_report": "Enable LUI error reporting",
	"lui_error_report_delay": "Number of ms to wait for error report to send before restarting the EXE",
	"lui_timescale": "Scale time of each frame of LUI animation",
	"m_filter": "Allow mouse movement smoothing",
	"m_forward": "Forward speed in units per second",
	"m_pitch": "Default pitch",
	"m_side": "Sideways motion in units per second",
	"m_yaw": "Default yaw",
	"mantle_adjustment_tu": "Enable the mantle adjustments for the cylindrical player collision",
	"mantle_check_angle": "The minimum angle from the player to a mantle surface to allow a mantle",
	"mantle_check_glass_extra_range": "The extra distance to test if glass is",
	"mantle_check_radius": "The player radius to test against while mantling",
	"mantle_check_range": "The minimum distance from a player to a mantle surface to allow a mantle",
	"mantle_check_range_mp": "The minimum distance from a player to a mantle surface to allow a mantle",
	"mantle_debug": "Show debug information for mantling",
	"mantle_enable": "Enable player mantling",
	"mantle_view_yawcap": "The angle at which to restrict a sideways turn while mantling",
	"mantle_weapon_anim_height": "If the player is mantling at this height or higher, the mantle animation will play.",
	"mantle_weapon_height": "If the player is mantling at this height or lower, his weapon will remain equipped.",
	"mapcrc": "crc of the map file",
	"mapname": "Current map name",
	"matchmaking_debug": "Enable matchmaking debugging information",
	"maxLossesValue": "Max value for losses in combat record",
	"maxMetPlayerListCount": "This dvar is used to changes the size of the met player list.",
	"maxStatsBackupInterval": "Maximum number of days before performing stats backup to Demonware User Storage",
	"melee_debug": "Turn on debug lines for melee traces",
	"metPlayerListCleanupInterval": "This dvar is used to make sure that recent met player list does not contain friends in it.",
	"metPlayerListUpdateInterval": "Time in milliseconds since update recent met player list.",
	"metPlayerListUploadInterval": "This dvar is used to make sure that recent met player list get updates only when it changes.",
	"microwave_turret_placement_trace_maxs": "maxs of the bound used for the placement trace",
	"microwave_turret_placement_trace_mins": "mins of the bound used for the placement trace",
	"microwave_turretplacement_traceOffset": "The amount to offset the trace start used in turret placement.",
	"migration_blocksperframe": "Number of blocks to send out each server frame.  A value of 0 means base it off our tested bandwidth.",
	"migration_forceHost": "force a particular client index to be host.",
	"migration_limit": "maximum number of migrations within migration_timeBetween dvar",
	"migration_minclientcount": "Minimum real client count, below which the host will not migrate.",
	"migration_msgtimeout": "timeout time in ms of migration messages",
	"migration_soak": "Soak test the migration. Migrate every migrationTimeBetween milliseconds",
	"migration_timeBetween": "milliseconds between migration_limit dvar's value of migrations.",
	"minDelayForOtherPlayerStatsFetch": "Delay in milliseconds to refetch the stats of a player.",
	"missileDroneAccelClimb": "Rocket acceleration when climbing.",
	"missileDroneAccelDescend": "Rocket acceleration when descending towards target.",
	"missileDroneClimbAngleDirect": "In direct-fire mode, the minimum angle between the rocket and target until the rocket stops climbing.  Smaller angles make for higher climbs.",
	"missileDroneClimbAngleTop": "In top-fire mode, the minimum angle between the rocket and targetuntil the rocket stops climbing.",
	"missileDroneClimbCeilingDirect": "In direct-fire mode, how high the missile needs to reach before it decends",
	"missileDroneClimbCeilingTop": "In top-fire mode, how high the missile needs to reach before it decends",
	"missileDroneClimbHeightDirect": "In direct-fire mode, how far above the target the rocket will aim for when climbing",
	"missileDroneClimbHeightTop": "In top-fire mode, how far above the target the rocket will aim for when climbing",
	"missileDroneClimbMaxDist": "If the Rocket exceeds this distance it will change from ascend mode to descend mode.",
	"missileDroneDistanceAvoidance": "In impact avoidance mode, how far to check for impacts",
	"missileDroneDistanceAvoidanceSec": "In impact avoidance mode,",
	"missileDroneDistSqTargetAvoidanceDisabled": "In impact avoidance mode, the max seconds to look ahead, is for when the missile is traveling at low speeds",
	"missileDroneflattenRollRatio": "When the projectile is flying straight, reduce the roll angle by this ratio every server frame",
	"missileDroneSpeedLimitClimb": "Rocket's speed limit when climbing.",
	"missileDroneSpeedLimitDescend": "Rocket's speed limit when descending towards target.",
	"missileDroneSpeedMin": "Rockets minimum speed, will not decelerate past this to reduce turing radius.",
	"missileDroneTurnDecel": "Used to reduce the speed of the missile to decrease turn radius",
	"missileDroneTurnMaxRate": "When turning at this DPS the maximum roll to be applied to the projectile",
	"missileDroneTurnMaxRoll": "When turning the maximum roll to be applied to the projectile",
	"missileDroneTurnMaxRollChange": "When turning the maximum roll to be applied to the projectile per server frame",
	"missileDroneTurnRateAscent": "In decent mode, how sharp the rocket can turn, in angles/sec.",
	"missileDroneTurnRateAvoidance": "In impact avoidance mode, how sharp the rocket can turn, in angles/sec.",
	"missileDroneTurnRateDecent": "In ascent mode, how sharp the rocket can turn, in angles/sec.",
	"missileDroneTurnRateSmallAdjustments": "When the projectile is only slightly off of its target angles use this, angles/sec",
	"missileHellfireMaxSlope": "This limits how steeply the hellfire missile can turn upward when climbing",
	"missileHellfireUpAccel": "The rate at which the hellfire missile curves upward",
	"missileJavAccelClimb": "Rocket acceleration when climbing.",
	"missileJavAccelDescend": "Rocket acceleration when descending towards target.",
	"missileJavClimbAngleDirect": "In direct-fire mode, the minimum angle between the rocket and target until the rocket stops climbing.  Smaller angles make for higher climbs.",
	"missileJavClimbAngleTop": "In top-fire mode, the minimum angle between the rocket and target until the rocket stops climbing.  Smaller angles make for higher climbs.",
	"missileJavClimbCeilingDirect": "In direct-fire mode, how high the missile needs to reach before it descends.",
	"missileJavClimbCeilingTop": "In top-fire mode, how high the missile needs to reach before it descends.",
	"missileJavClimbHeightDirect": "In direct-fire mode, how far above the target the rocket will aim for when climbing.",
	"missileJavClimbHeightTop": "In top-fire mode, how far above the target the rocket will aim for when climbing.",
	"missileJavSpeedLimitClimb": "Rocket's speed limit when climbing.",
	"missileJavSpeedLimitDescend": "Rocket's speed limit when descending towards target.",
	"missileJavTurnRateDirect": "In direct-fire mode, how sharp the rocket can turn, in angles/sec.",
	"missileJavTurnRateTop": "In top-fire mode, how sharp the rocket can turn, in angles/sec.",
	"missileMolotovBlobNum": "The number of fire blobs a molotov should spawn on impact, these count against the server entities.",
	"missileMolotovBlobTime": "The life time of a molotov fire blob in seconds.",
	"missilePlantableSize": "Size of the bounding box used for plantable equipment collision.",
	"missileTVGuidedBoost": "The multiplier that the TV guided missile recieves while boosting.",
	"missileTVGuidedBoostSpeedDown": "Speed decrease factor to return from full boost.",
	"missileTVGuidedBoostSpeedUp": "Speed increase factor to get to full boost.",
	"missileTVGuidedFlatteningRollAccel": "Roll acceleration when the missile is flattening out after a turn.",
	"missileTVGuidedMaxRollAngle": "Max roll the missile will have when turning.",
	"missileTVGuidedMPSpecific": "MP specific Guided Missile functionality",
	"missileTVGuidedStickDeadzone": "defines the dead zone for stick movement (stick values range from -128..127",
	"missileTVGuidedTurningRollAccel": "Roll acceleration when the missile is turning.",
	"missileTVGuidedTurnRate": "max turn rate of a tv guided missile (multiplied by the stick deflection [0-1])",
	"missileWaterMaxDepth": "If a missile explodes deeper under water than this, they explosion effect/sound will not play.",
	"missingCommandWillError": "When true a missing command or config file will cause an ERR_DROP.",
	"mortarStrikesLeft": "Mortar locations not positioned yet",
	"motdDelay": "Delay after which the MOTD is shown again.",
	"name": "Player name",
	"net_broadcast_port": "Broadcast Network port",
	"net_emu_client": "Client network emulation info string",
	"net_emu_jitter": "Emulated network latency jitter in ms",
	"net_emu_latency": "Emulated network latency in ms",
	"net_emu_packet_loss": "Emulated network %% packet loss",
	"net_emu_server": "Server network emulation info string",
	"net_ip": "Network IP Address",
	"net_noudp": "Disable UDP",
	"net_port": "Network port",
	"net_socksEnabled": "Enable network sockets",
	"net_socksPassword": "Network socket password",
	"net_socksPort": "Network socket port",
	"net_socksServer": "Network socket server",
	"net_socksUsername": "Network socket username",
	"nextmap": "Next map to play",
	"nightVisionDisableEffects": "nightVisionPowerOnTime",
	"nightVisionFadeInOutTime": "How long the fade to/from black lasts when putting on or removing night vision goggles.",
	"nightVisionPowerOnTime": "How long the black-to-nightvision fade lasts when turning on the goggles.",
	"onlinegame": "Current game is an online game with stats, custom classes, unlocks",
	"overrideNVGModelWithKnife": "When true, nightvision animations will attach the weapDef's knife model instead of the night vision goggles.",
	"party_allowguests": "Whether or not guests are allowed in the playlist",
	"party_autoteams": "Enables/Disables auto team functionality",
	"party_challengeResponseInterval": "ms between sending challenge responses to the server",
	"party_chanceToFailConnection": "Probability that the party prober will simulate a failure to connect.",
	"party_chooseLowestPingSlot": "When true, matchmaking will prioritize slots with the lowest pingparty_keepPartyAliveWhileMatchmaking",
	"party_clientTimeout": "After not hearing from the host for this amount of time the client will timeout of the party",
	"party_connect_dedicated": "connect to dedicated servers",
	"party_connectTimeout": "Connect timeout",
	"party_connectToOthers": "If false, we will just start our own lobby rather than connect to another lobby, even if others exist",
	"party_considerStreamingForHostMigration": "party_requestMigrateDuringAutoStartIfStreaming",
	"party_debugShowSkill": "Show players skill rating instead of clan tag in lobby lists",
	"party_dedicatedMergeMinPlayers": "Minimum number of players before we attempt a dedicated server merge",
	"party_dedicatedOnly": "only allow dedicated servers to host",
	"party_disableLockin": "disable the league UI lockin",
	"party_disconnectPlayerOnJoinFailed": "Whether to disconnect players when the fail to join",
	"party_disconnectPlayerOnRemoval": "Whether to disconnect players upon removal by the host",
	"party_editingsettings": "True if the host is editing game settings",
	"party_firstSubpartyIndex": "Determines sort order and coloring of parties in lobbies.  Randomly set by code.  Dvar provided for debugging.",
	"party_forceMemberUpdateOnVoiceConnectivityBits": "Whether to force a party member update on receiving voice connectivity bits (even if they are unchanged)",
	"party_forceMigrateAfterRound": "When true, we trigger a request for host migration after every game.",
	"party_forceMigrateOnMatchStartRegression": "When true, we request a host migration when the match starting conditions regress (usually when a player leaves).",
	"party_gamesize": "Current maximum game size",
	"party_gameStartTimerLength": "Time in seconds before a game start once enough party members are ready",
	"party_gameStartTimerLengthPrivate": "Time in seconds before a game start once enough party members are ready",
	"party_gametype": "Current gametype",
	"party_hostname": "The name of the host player",
	"party_iamhost": "True if selected player is you and if you are the host.  Only valid when used with party feeders.",
	"party_isPreviousMapVoted": "If previous map won the voting",
	"party_joinInProgressAllowed": "The party can be joined in the middle of a game",
	"party_kickplayerquestion": "String to store the question about kicking the selected player",
	"party_leagueValidityGrace": "Grace period before kicking members for being in invalid teams",
	"party_linearMapCycle": "We will cycle through the maps linearly if this is true.",
	"party_linearMapCycleRandom": "We will cycle through the maps linearly if this is true but picks a random start map.",
	"party_lobbyExtensionTime": "Extension time (in seconds) for the lobby min time during streaming.",
	"party_localTeamTest": "When true, a local team test is being carried out, so real xuids will be absent.",
	"party_mapname": "Current map name",
	"party_mappacks": "The string for the current combination of map packs in use",
	"party_matchedPlayerCount": "Number of matched players before revealing their true names",
	"party_maxChangeListDiff": "Max diff in changelists between client and host before showing warning in UI",
	"party_maxDesperateMigrationTime": "Maximum time before a host migration has failed due to lack of consensus",
	"party_maxlocalplayers": "Maximum number of players in a party",
	"party_maxlocalplayers_leaguematch": "Maximum number of local players in a league lobby",
	"party_maxlocalplayers_local_splitscreen": "Maximum number of local players in a local splitscreen lobby",
	"party_maxlocalplayers_mainlobby": "Maximum number of local players in the main lobby.",
	"party_maxlocalplayers_playermatch": "Maximum number of players in a party",
	"party_maxlocalplayers_privatematch": "Maximum number of players in a party",
	"party_maxlocalplayers_systemlink": "Maximum number of local players in a systemlink lobby",
	"party_maxlocalplayers_theater": "Maximum number of players in a party",
	"party_maxlocalplayers_wagermatch": "Maximum number of players in a party",
	"party_maxMemberUpdateInterval": "Maximum interval between member update messages",
	"party_maxMigrationTime": "Maximum time before a host migration has failed",
	"party_maxplayers": "Maximum number of players in a party",
	"party_maxplayers_leaguematch": "Maximum number of players in a league lobby",
	"party_maxplayers_local_splitscreen": "Maximum number of players in a local splitscreen lobby",
	"party_maxplayers_partylobby": "Maximum number of players in a party",
	"party_maxplayers_playermatch": "Maximum number of players in a party",
	"party_maxplayers_privatematch": "Maximum number of players in a party",
	"party_maxplayers_systemlink": "Maximum number of players in a systemlink lobby",
	"party_maxplayers_theater": "Maximum number of players in a party",
	"party_maxplayers_wagermatch": "Maximum number of players in a party",
	"party_maxplayers_wagerpartylobby": "Maximum number of players in a party",
	"party_membersMissingMapPack": "Whether any party member is missing one of the enabled map packs. Only valid after running partyUpdateMissingMapPackDvar",
	"party_memberUpdateBackoffRate": "Rate at which we backoff member updates",
	"party_mergingEnabled": "Whether the lobby host for look for sessions to merge with",
	"party_mergingJitter": "Upper bound on jitter to apply to merging sessinon search in milliseconds",
	"party_migrateRestTime": "Time to wait for the party state to relax before trying to migrate",
	"party_minLobbyTime": "Minimum time (in seconds) for a lobby to be open before auto starting a match",
	"party_minMemberUpdateInterval": "Minimum interval between member update messages",
	"party_minplayers": "Minimum number of players in a party",
	"party_minResumeMs": "Time in ms before accepting another 'go' message after quitting a game",
	"party_neverJoinRecent": "If true recent games are never joined during session searches",
	"party_playerCount": "Number of players currently in that party/lobby.",
	"party_playervisible": "Whether selected player in party is showing true info or not.  Only valid when used with party feeders.",
	"party_pregameStartTimerLength": "Time in seconds before showing and starting the game start timer",
	"party_pregameStartTimerLengthPrivate": "Time in seconds before showing and starting the game start timer",
	"party_readyAllowOnlyLocalPlayers": "Allow the player to start a party match with only local players.",
	"party_readyButtonVisible": "The party ready button is visible in the UI",
	"party_readyPercentRequired": "The fraction of the waiting players who need to be ready for a party to start",
	"party_reconnectToClientOnTimeout": "Whether to attempt reconnection to clients after timeout",
	"party_reconnectToHostOnTimeout": "Whether to attempt reconnection to host after timeout",
	"party_requestMigrateDuringAutoStartIfStreaming": "When true, will consider the factor of whether the host is streaming or not, when nominating for host migration",
	"party_restartMatchmakingTimer": "Minimum time (in seconds) for a lobby to be open before auto matchmaking",
	"party_searchInterval": "Interval in milliseconds between session searches for lobby merging",
	"party_sequentialPreviousMapVotingAllowed": "If sequential previous map voting is allowed",
	"party_simulateLongQoS": "simulate a real QoS which takes around 30 seconds",
	"party_skillAllowancePerSecond": "The amount we increase the allowed skill difference by each second that we are searching",
	"party_skillBaseDifferenceAllowance": "The minimum skill difference we will allow when joining a league lobby",
	"party_subSearchInterval": "Interval in milliseconds between session searches for subparty lobby merging",
	"party_teamSwitchDelay": "The time in seconds that team switchs are delayed until applied.",
	"party_theaterTimeoutWhenLoaded": "After not hearing from the host for this amount of time the client will timeout of the theater",
	"party_theaterTimeoutWhenLoading": "After not hearing from the host for this amount of time the client will timeout of the theater when the film is loading",
	"party_vetoButtonVisible": "The party veto button is visible in the UI",
	"party_vetoDelayTime": "Delay time in seconds for a successful map vote to execute",
	"party_vetoPassed": "Did the veto pass?",
	"party_vetoPercentRequired": "The fraction of the waiting players who need to veto for a map to be skipped",
	"partyMigrate_debugEnabled": "Print debug info on reliable migrate on screen",
	"partyMigrate_disabled": "Set to true to disable party migration",
	"partymigrate_HostWaitMS": "ms to send hostannounce packets before sending partystates",
	"partyMigrate_maxBWPackets": "number of bw test packets to send when we have the token",
	"partymigrate_MaxPacketWaitTime": "ms to wait for test packet responses after last packet is sent",
	"partymigrate_MinScoreDiff": "minimum score nominee must differ by before rank will change",
	"partyMigrate_NomineeRecalcInterval": "ms to wait between recalculating migration nominees",
	"partymigrate_NomineeWaitMS": "ms to wait for each nominee to send us a partystate",
	"partyMigrate_TestInterval": "base ms to wait between test rounds, see partymigrate_TestIntervalJitter",
	"partyprober_chanceToFailAssociation": "Probability that the party prober will simulate a failure to associate.",
	"partyprober_chanceToFailSend": "Probability that the party prober will simulate the server dropping a packet we sent.",
	"password": "password",
	"pc_newversionavailable": "True if new version available for download",
	"pclive_updateFriends": "Determine whether to send PC friends to content server.",
	"penetrationCount": "Maximum number of private clients allowed on the server",
	"penetrationCount_allies": "Maximum number for TEAM_ALLIES",
	"penetrationCount_axis": "Maximum number for TEAM_AXIS",
	"perk_armorPiercing": "Percent bullet damage is increased for helicopters, spy planes, and turrets.",
	"perk_blackbirdShowsGpsJammer": "Set to true if the blackbird should show players with 'specialty_gpsjammer",
	"perk_bulletPenetrationMultiplier": "Multiplier for extra bullet penetration",
	"perk_damageKickReduction": "The percentage decrease of view kick flinch when the player takes damage",
	"perk_deathStreakCountRequired": "Number of deaths required to obtain a deathstreak.",
	"perk_delayExplosiveTime": "Time in seconds to delay a proximity explosive",
	"perk_disarmExplosiveTime": "Time in seconds to disarm a proximity explosive",
	"perk_dogsAttackGhost": "Set to true if the dogs should attack players with 'specialty_nottargetedbyai",
	"perk_extraBreath": "Number of extra seconds a player can hold his breath",
	"perk_fastLadderClimbMultiplier": "Multiplier for ladder climbing speed.",
	"perk_fireproof": "Percent to reduce flame damage done to the player.",
	"perk_flakJacket": "Percent of explosive damage done that will apply to player.",
	"perk_flakJacket_hardcore": "Percent of explosive damage done that will apply to player in hardcore.",
	"perk_gpsjammer_alpha": "The alpha of the player material on the minimap when being protected",
	"perk_gpsjammer_graceperiods": "Number of time period a player can be below the required velocity before removing protection.",
	"perk_gpsjammer_min_distance": "Minimum distance a player must have moved in a time period for gpsjammer to protect them from UAV sweeps.  If 0, player will always be protected from UAV sweeps with this specialty.",
	"perk_gpsjammer_min_speed": "Minimum speed a player must be moving for gpsjammer to protect them from UAV sweeps.  Based on player speed used in g_speed (I believe this is units/sec).  If 0, player will always be protected from UAV sweeps with this specialty.",
	"perk_gpsjammer_time_period": "Time period inbetween checks, in MSec. Please use multiples of 50 msec as that is the period of server script",
	"perk_grenadeDeath": "Name of the grenade weapon to drop",
	"perk_grenadeTossBackTimer": "Minimum timer for a grenade.  If the time left is less than this it will be bumped up.  Tossback Perk",
	"perk_healthRegenMultiplier": "Multiplier to the time which the player starts to regenerate health after damage",
	"perk_interactSpeedMultiplier": "Multiplier for increasing use timers.",
	"perk_killstreakDeathPenaltyMultiplier": "Multiplies the amount of death penalty received by the player",
	"perk_killstreakMomentumMultiplier": "Multiplies the amount of momentum received by the player",
	"perk_killstreakReduction": "Reduced number of kills required to obtain a killstreak.",
	"perk_mantleReduction": "The percentage decrease of mantle up time",
	"perk_marksmanEnemyNameFadeIn": "Time in milliseconds to fade in enemy names for the marksman perk.",
	"perk_marksmanEnemyNameFadeOut": "Time in milliseconds to fade out enemy names for the marksman perk.",
	"perk_nottargetedbyai_graceperiod": "Time after which the player drops below min_gpsjammer_speed that they are still protected from ai support targetting.  0-10000 int (in milliseconds), 0 default.",
	"perk_nottargetedbyai_min_speed": "Minimum speed a player must be moving for nottargetedbyai to protect them from AI controlled killstreaks. If 0, player will always be protected from AI controlled killstreaks with this specialty.perk_gpsjammer_fade_time",
	"perk_scavenger_clip_multiplier": "On every scavenger pick up, give the player scavenger_clip_multiplier clips of ammo for every weapon they are carrying - where a 'clip' equals the ammo count in the weapon's GDT entry 'clipSize'. 0-10 float, 2 default. Support rounding to an integer bullet count when a float is used.",
	"perk_scavenger_lethal_proc": "On every (scavenger_lethal_proc) scavenger pickups, the player receives +1 lethal.  I.e. if this were 3, the player would need to pick up 3 scavenger bags to refill 1 frag grenade.",
	"perk_scavenger_tactical_proc": "- On every (scavenger_tactical_proc) scavenger pickups, the player receives +1 tactical.  0-10 int, 2 default.",
	"perk_shellShockReduction": "The percentage decrease of shellshock time",
	"perk_speedMultiplier": "Player speed multiplier",
	"perk_sprintMultiplier": "Multiplier for player_sprinttime",
	"perk_sprintRecoveryMultiplier": "Percent of sprint recovery time to use.",
	"perk_throwbackInnerRadius": "The radius to a live grenade player must be within initially to do a throwback with the toss back perk on",
	"perk_weapAdsMultiplier": "Percentage of weapon ADS rate to use",
	"perk_weapEquipmentUseMultiplier": "Percentage of equipment use rate to use",
	"perk_weapMeleeMultiplier": "Percentage of weapon melee recovery rate to use",
	"perk_weapRateMultiplier": "Percentage of weapon firing rate to use",
	"perk_weapReloadMultiplier": "Percentage of weapon reload time to use",
	"perk_weapSpreadMultiplier": "Percentage of weapon spread to use",
	"perk_weapSwitchMultiplier": "Percentage of weapon switching rate to use",
	"perk_weapTossMultiplier": "Percentage of grenade toss rate to use",
	"phys_buoyancy": "Used to turn on/off buoyancy",
	"phys_buoyancyDistanceCutoff": "Objects that are too far will sink.",
	"phys_buoyancyFloatHeightOffset": "Adjust the height that buoyant physics objects float",
	"phys_disableEntsAndDynEntsCollision": "Disable rigid body collision with dyn ents and regular entities as an optimization.  Vehicles do not apply.",
	"phys_gravity": "Physics gravity in units/sec^2.",
	"phys_gravity_dir": "Sets the gravity direction.",
	"phys_impact_distance_cutoff": "Disable effects that are further than distance_cutoff value. Uses the distance /in inches/ to the closes active player.",
	"phys_impact_fx": "Enable/Disable the physics impact effects.",
	"phys_impact_intensity_limit": "Lower limit for the intensity of the impact sounds that the engine triggers.",
	"phys_maxFloatTime": "Maximum time objects can float (in ms)",
	"phys_piecesSpawnDistanceCutoff": "Determine how far we can spawn destructible pieces.",
	"phys_ragdoll_buoyancy": "Used to turn on/off the buoyancy for he ragdolls",
	"phys_vehicleDamageFroceScale": "Physics vehicle damamge force scale.",
	"phys_vehicleGravityMultiplier": "Physics gravity multiplier for vehicles.",
	"phys_vehicleWheelEntityCollision": "Enable to turn on vehicle wheel entity collision.",
	"pickupPrints": "Print a message to the game window when picking up ammo, etc.",
	"player_adsExitDelay": "Delay before exiting aim down sight",
	"player_animRunThreshhold": "The speed at which the player will animate as though they are running",
	"player_animWalkThreshhold": "The speed at which the player will animate as though they are walking",
	"player_backSpeedScale": "The scale applied to the player speed when moving backwards",
	"player_bayonetLaunchDebugging": "Simulates bayonet charge without requiring an enemy to do so.",
	"player_bayonetLaunchProof": "Adds extra code to check for bayonet launching, preventing related exploits.",
	"player_bayonetLaunchZCap": "Max Z velocity during bayonet charge.",
	"player_bayonetRange": "The maximum range of the player's bayonet attack",
	"player_bayonetTargetDist": "The distance to the enemy the player's will stop charging",
	"player_breath_fire_delay": "The amount of time subtracted from the player remaining breath time when a weapon is fired",
	"player_breath_gasp_lerp": "The interpolation rate for the target waver amplitude when gasping",
	"player_breath_gasp_scale": "Scale value to apply to the target waver during a gasp",
	"player_breath_gasp_time": "The amount of time a player will gasp once they can breath again",
	"player_breath_hold_lerp": "The interpolation rate for the target waver amplitude when holding breath",
	"player_breath_hold_time": "The maximum time a player can hold his breath",
	"player_breath_snd_delay": "The delay before playing the breathe in sound",
	"player_breath_snd_lerp": "The interpolation rate for the player hold breath sound",
	"player_clipSizeMultiplier": "Changes the clip size of weapons with more than one bullet in their clip.",
	"player_debugHealth": "Turn on debugging info for player health",
	"player_disableWeaponsOnVehicle": "Disable weapons while riding a vehicle",
	"player_dmgtimer_flinchTime": "Maximum time to play flinch animations",
	"player_dmgtimer_maxTime": "The maximum time that the player is slowed due to damage",
	"player_dmgtimer_minScale": "The minimum scale value to slow the player by when damaged",
	"player_dmgtimer_stumbleTime": "Maximum time to play stumble animations",
	"player_dmgtimer_timePerPoint": "The time in milliseconds that the player is slowed down per point of damage",
	"player_enableShuffleAnims": "Whether players should play shuffle anims at low speeds",
	"player_enduranceSpeedScale": "The scale applied to the player speed when they have endurance perk",
	"player_footstepsThreshhold": "The minimum speed at which the player makes loud footstep noises",
	"player_forceRedCrosshair": "Force the player's crosshair to turn red",
	"player_knockbackMoveThreshhold": "The speed threshold before a player is considered to be running forwards after applying knockback",
	"player_lastStandBleedoutTime": "The time taken by the player to completely bleedout when in last stand (pro version).",
	"player_lastStandBleedoutTimeNoRevive": "The time taken by the player to completely bleedout when in last stand (non-pro version).",
	"player_lastStandHealthOverlayTime": "The time at the end of last stand to apply health (red) overlay",
	"player_lean_rotate": "Amount to rotate the player 3rd person model when leaning(x:left, y:right)",
	"player_lean_shift": "Amount to shift the player 3rd person model when leaning(x:left, y:right)",
	"player_lean_shift_crouch": "Amount to shift the player 3rd person model when crouch leaning(x:left, y:right)",
	"player_lookAtEntityAllowChildren": "Allow's look at entity to detect children during locational trace",
	"player_meleeCalcSpeedFromTarget": "Whether to calculate speed and friction based on melee target rather than constant aim assist distance",
	"player_meleeChargeFriction": "Friction used during melee charge",
	"player_meleeChargeMaxSpeed": "Max speed to clamp when doing a charge melee",
	"player_meleeHeight": "The height of the player's melee attack",
	"player_meleeInterruptFrac": "Scaler allowing melee interrupt",
	"player_meleeRange": "The maximum range of the player's melee attack",
	"player_meleeWidth": "The width of the player's melee attack",
	"player_MGUseRadius": "The radius within which a player can mount a machine gun",
	"player_move_factor_on_torso": "The contribution movement direction has on player torso direction(multi-player only)",
	"player_moveThreshhold": "The speed at which the player is considered to be moving for the purposes of",
	"player_revivePlayerListCycleTime": "The time for cycling through the list of players who are in last stand.",
	"player_reviveTriggerRadius": "The radius for the hint string and revive radius",
	"player_runbkThreshhold": "The speed threshold before a player is considered to be running backwards",
	"player_runThreshhold": "The speed threshold before a player is considered to be running forwards",
	"player_scopeExitOnDamage": "Exit the scope if the player takes damage",
	"player_slick_accel": "Controls how fast the player accelerates on a flat slick surface.player_slick_invspeed",
	"player_slick_wishspeed": "Controls how fast the player will slide on a flat slick surface.",
	"player_sliding_friction": "Controls the friction during slide.",
	"player_sliding_velocity_cap": "Velocity threshold for the player slide.",
	"player_sliding_wishspeed": "Controls how fast the player will slide.",
	"player_slopeAnimAngle": "Angle at which the player will start animating differently when going up or down slopes",
	"player_spectateSpeedScale": "The scale applied to the player speed when spectating",
	"player_sprintCameraBob": "The speed the camera bobs while you sprint",
	"player_sprintForwardMinimum": "The minimum forward deflection required to maintain a sprint",
	"player_sprintMinTime": "The minimum sprint time needed in order to start sprinting",
	"player_sprintRechargePause": "The length of time the meter will pause before starting to recharge after a player sprints",
	"player_sprintSpeedScale": "The scale applied to the player speed when sprinting",
	"player_sprintStrafeSpeedScale": "The speed at which you can strafe while sprinting",
	"player_sprintThreshhold": "The speed threshhold before a player is considered to be sprinting",
	"player_sprintTime": "The base length of time a player can sprint",
	"player_sprintUnlimited": "Whether players can sprint forever or not",
	"player_standingViewHeight": "The height of the camera for the player when standing",
	"player_strafeAnimCosAngle": "Cosine of the angle which player starts using strafe animations",
	"player_strafeSpeedScale": "The scale applied to the player speed when strafing",
	"player_sustainAmmo": "Firing weapon will not decrease clip ammo.",
	"player_swimDamage": "Damage the player will take each interval while out of breath in deep water.",
	"player_swimDamagerInterval": "Interval in which damage will be dealt while out of breath under water.",
	"player_swimTime": "Set the max time the player can swim underwater before taking damage.",
	"player_throwbackInnerRadius": "The radius to a live grenade player must be within initially to do a throwback",
	"player_throwbackOuterRadius": "The radius player is allow to throwback a grenade once the player has been in the inner radius",
	"player_throwbackOuterRadius_zm": "The radius player is allow to throwback a grenade once the player has been in the inner radius zm",
	"player_turnAnims": "Use animations to turn a player's model in multiplayer",
	"player_useRadius": "The radius within which a player can use things",
	"player_useRadius_zm": "The radius within which a player can use things in zombiemode",
	"player_view_pitch_down": "Maximum angle that the player can look down",
	"player_view_pitch_up": "Maximum angle that the player can look up",
	"player_viewLockEnt": "Set an entity that the player view will be locked too.",
	"player_viewRateScale": "Player view rate scale modifier when player doesn't have a weapon.",
	"player_waterSpeedScale": "Water movement speed scalar.  The larger the value, the faster the movement.",
	"player_zombieMeleeHeight": "The height of the player zombie's melee attack",
	"player_zombieMeleeRange": "The maximum range of the player's melee attacks when they are a zombie",
	"player_zombieMeleeWidth": "The width of the player zombie's melee attack",
	"player_zombieSpeedScale": "The scale applied to the player speed when they are a walking or running player zombie",
	"player_zombieSprintSpeedScale": "The scale applied to the player speed when they are a sprinting player zombie",
	"playerPushAmount": "If this value is set the player will get pushed away from AIs by the amount specified.",
	"playlist_allowdevmaps": "Allow maps that aren't in the map/presence table to be selected",
	"playlist_enabled": "Setting state to CA_LOADING in CL_DownloadsComplete",
	"playlist_entry": "The current server playlist entry.",
	"playlist_excludeMap": "The current server playlist entry.",
	"playlist_next": "The server playlist for next map rotation",
	"popInLetterFXTime": "Time it takes for a letter to pop in.",
	"probation_league_enabled": "Probation enabled",
	"probation_league_forgiveCount": "How many violations to forgive when probation is given",
	"probation_league_kickcalar": "How much each kick is factored into the probation",
	"probation_league_matchHistoryWindow": "How many games are evaluated to determin probation.",
	"probation_league_probationThreshold": "How many violations puts the player over the limit.",
	"probation_league_probationTime": "Time the player gets punished in minutes.",
	"probation_league_quitScalar": "How much each quit is factored into the probation",
	"probation_league_timeoutScalar": "How much each timeout is factored into the probation",
	"probation_league_warningThreshold": "How many violations causes the player to get warned.",
	"probation_public_enabled": "Probation enabled",
	"probation_public_forgiveCount": "How many violations to forgive when probation is given",
	"probation_public_kickScalar": "How much each kick is factored into the probation",
	"probation_public_matchHistoryWindow": "How many games are evaluated to determin probation.",
	"probation_public_probationThreshold": "How many violations puts the player over the limit.",
	"probation_public_probationTime": "Time the player gets punished in minutes.",
	"probation_public_quitScalar": "How much each quit is factored into the probation",
	"probation_public_timeoutScalar": "How much each timeout is factored into the probation",
	"probation_public_warningThreshold": "How many violations causes the player to get warned.",
	"prone_bipod_enable": "Enable bipods whilst prone",
	"protocol": "Client sending new DoubleXPMask. old XP Mask: %i New XP Mask: %i",
	"qosMaxAllowedPing": "QoS max allowed ping",
	"qosPreferredPing": "QoS preferred ping",
	"r_aaSamples": "Anti-aliasing sample count; 1 disables anti-aliasing",
	"r_aaSamplesMax": "Maximum number of samples supported for anti-aliasing.",
	"r_alphaMap": "Override all alpha maps",
	"r_anaglyphFX_enable": "Enable red/green Anaglyph 3DS",
	"r_aspectRatio": "Screen aspect ratio.  Most widescreen monitors are 16:10 instead of 16:9.",
	"r_aspectRatioWindow": "Screen aspect ratio.",
	"r_autoLodScale": "Enable FPS-based auto LOD scale",
	"r_autopriority": "Automatically set the priority of the windows process when the game is minimized",
	"r_blinkCullNone": "Blink materials with cull none.",
	"r_blinkLayers": "Blink materials with specific number of layers.",
	"r_blinkLitQuasiOpaque": "Blink Lit Transparencies with Depth write (Foliage Blend etc).",
	"r_blinkTrans": "Blink All Transparencies.",
	"r_bloomHiQuality": "bloom quality",
	"r_bloomTweaks": "enbale bloom tweaks",
	"r_blur": "Dev tweak to blur the screen",
	"r_brightness": "Brightness adjustment",
	"r_brushLimit": "Maximum number of brushes drawn simultaneously",
	"r_clipCodec": "Codec used when rendering clips.",
	"r_clipFPS": "Render clip FPS.",
	"r_clipSize": "Render clip size.",
	"r_cmdbuf_worker": "Process command buffer in a separate thread",
	"r_colorMap": "Override all color maps",
	"r_contrast": "Contrast adjustment",
	"r_convergence": "Change 3D convergence",
	"r_cubicUpsampleParam": "Cubic Upsample Parameter",
	"r_currentMonitor": "Index of the current full screen monitor.",
	"r_customMode": "Special resolution mode for the remote debugger",
	"r_debugMetalStorm": "shows extra MetalStorm info",
	"r_debugPerformance": "Enable performance debug shader",
	"r_debugShader": "Enable normal map debug shader",
	"r_debugShowCoronas": "shows location of coronas",
	"r_debugShowDynamicLights": "shows location of dynamic lights",
	"r_debugShowPrimaryLights": "shows location of primary lights",
	"r_defaultMode": "Default resolution mode",
	"r_desaturation": "Desaturation adjustment",
	"r_disableGenericFilter": "Stops the Generic Filters running",
	"r_dlightLimit": "Maximum number of dynamic lights drawn simultaneously",
	"r_dobjLimit": "Maximum number of DObjs drawn simultaneously",
	"r_dof_bias": "Depth of field bias as a power function (like gamma); less than 1 is sharper",
	"r_dof_enable": "Enable the depth of field effect",
	"r_dof_farBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"r_dof_farEnd": "Depth of field far end distance, in inches",
	"r_dof_farStart": "Depth of field far start distance, in inches",
	"r_dof_nearBlur": "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480",
	"r_dof_nearEnd": "Depth of field near end distance, in inches",
	"r_dof_nearStart": "Depth of field near start distance, in inches",
	"r_dof_showdebug": "displays DOF parameter debug",
	"r_dof_tweak": "Use dvars to set the depth of field effect; overrides r_dof_enable",
	"r_dof_viewModelEnd": "Depth of field viewmodel end distance, in inches",
	"r_dof_viewModelStart": "Depth of field viewmodel start distance, in inches",
	"r_dofHDR": "dof mode, 0 = legacy 1 = hdr low 2 = hdr hi",
	"r_dpvs_useCellForceInvisibleBits": "turns on/off the script-driven cell vis bits",
	"r_drawDebugFogParams": "enables the fog debug display",
	"r_drawLightmapDrawlists": "disable drawing of the LIGHTMAP drawlists",
	"r_drawLitDrawlists": "disable drawing of the LIT drawlists",
	"r_drawWater": "Enable water rendering",
	"r_dualPlayActive": "Set ingame when Split Screen is active",
	"r_dualPlayEnable": "DualPlay on/off toggle",
	"r_dualPlayTestCount": "Enable testing of backend framebuffer double counting",
	"r_enableCubicUpsample": "Enable Cubic Upsample",
	"r_enableFlashlight": "Enable Player Flashlight.",
	"r_enableOccluders": "Enable occluders",
	"r_enablePlayerShadow": "Enable First Person Player Shadow.",
	"r_exposureTweak": "enable the exposure dvar tweak",
	"r_exposureValue": "exposure ev stops",
	"r_extracam_custom_aspectratio": "custom extracam aspect ratio (width/height). Set to -1 to use default aspect ratio",
	"r_extracam_lod_scale": "Scales an objects distance from the extracam for LOD calculation",
	"r_filmLut": "Film LUT Index.",
	"r_filmTweakBrightness": "Tweak dev var; film color brightness",
	"r_filmTweakDesaturation": "Tweak dev var; Desaturation applied after all 3D drawing",
	"r_filmTweakEnable": "Tweak dev var; enable film color effects",
	"r_filmTweakInvert": "Tweak dev var; enable inverted video",
	"r_filmTweakLut": "Tweak Film LUT Index.",
	"r_filmUseTweaks": "Overide film effects with tweak dvar values",
	"r_finalShiftX": "r,g,b channel shift x",
	"r_finalShiftY": "r,g,b channel shift y",
	"r_flame_allowed": "Allow flame effect.",
	"r_flameFX_distortionScaleFactor": "Distortion uv scales (Default to 1)",
	"r_flameFX_fadeDuration": "Sets fade duration in seconds",
	"r_flameFX_FPS": "fire frames per sec",
	"r_flameFX_magnitude": "Distortion magnitude",
	"r_flameScaler": "Flame Scaler",
	"r_flashLightBobAmount": "Flashlight Movement Amount.",
	"r_flashLightBobRate": "Flashlight Movement Rate.",
	"r_flashLightBrightness": "Brightness scale for flash light.",
	"r_flashLightColor": "Flashlight Color.",
	"r_flashLightEndRadius": "Radius of the circle at the end of the flash light in inches.",
	"r_flashLightFlickerAmount": "Flashlight Flicker Amount.",
	"r_flashLightFlickerRate": "Flashlight Flicker Rate (Times per second).",
	"r_flashLightFovInnerFraction": "Relative Inner FOV angle for the dynamic flash light. 0 is full fade 0.99 is almost no fade.",
	"r_flashLightOffset": "Relative position of the Flashlight.",
	"r_flashLightRange": "Distance of the flash light in inches.",
	"r_flashLightShadows": "Enable shadows for flash light.",
	"r_flashLightSpecularScale": "Flashlight Specular Scale.",
	"r_flashLightStartRadius": "Radius of the circle at the start of the flash light in inches.",
	"r_fog": "Set to 0 to disable fog",
	"r_fog_disable": "Disables fog",
	"r_fogBaseDist": "start distance",
	"r_fogBaseHeight": "start height",
	"r_fogColor": "Color of fog",
	"r_fogHalfDist": "distance at which fog is 50%",
	"r_fogHalfHeight": "height at which fog is 50%",
	"r_fogOpacity": "Fog opacity",
	"r_fogSunColor": "sun color",
	"r_fogSunInner": "sun angle start",
	"r_fogSunOpacity": "sun opacity",
	"r_fogSunOuter": "sun angle end",
	"r_fogSunPitch": "sun pitch",
	"r_fogSunYaw": "sun yaw",
	"r_fogTweak": "enable dvar tweaks",
	"r_fontResolution": "Console font resolution setting. The value is 720 or 1080.",
	"r_forceCameraHdg": "Force camera to heading.",
	"r_forceCameraNode": "Force camera to pathnode position.",
	"r_forceCamerarecord": "Turn on/off force camera record Mode.",
	"r_forceLod": "Force all level of detail to this level",
	"r_fullbright": "Toggles rendering without lighting",
	"r_fullPrepass": "Enable full prepass.",
	"r_fullscreen": "Game window mode (window, fullscreen, fullscreen window)",
	"r_fxaa": "fxaa",
	"r_genericSceneVector0": "Generic Scene Vector 0",
	"r_genericSceneVector1": "Generic Scene Vector 1",
	"r_genericSceneVector2": "Generic Scene Vector 2",
	"r_genericSceneVector3": "Generic Scene Vector 3",
	"r_genericSceneVector_debug": "Enable the generic scene vector debug",
	"r_glossMap": "Replace all gloss maps",
	"r_grassEnable": "Diables grass movement",
	"r_grassWindForceEnable": "Enables wind gusts that affect dynFoliage grass",
	"r_heroLighting": "Enable hero-only lighting",
	"r_heroLightScale": "hero diffuse light scale",
	"r_highLodDist": "Distance for high level of detail",
	"r_ignorehwgamma": "Ignore hardware gamma",
	"r_lightConflicts": "Shows conflicts between primary lights",
	"r_lightGridContrast": "Adjust the contrast of light color from the light grid",
	"r_lightGridEnableTweaks": "Enable tweaks of the light color from the light grid",
	"r_lightGridIntensity": "Adjust the intensity of light color from the light grid",
	"r_lightMapFilterDisable": "Disable filtering on lightmaps",
	"r_lightmapOnlyBspSurfs": "Enable lightmap_only_surfs tech for BSP draw surfaces",
	"r_lightmapOnlyEntSurfs": "Enable lightmap_only_surfs tech for scene ent draw surfaces",
	"r_lightmapOnlySModelSurfs": "Enable lightmap_only_surfs tech for static model draw surfaces",
	"r_lightMapSecondary": "Replace secondary lightmaps with varying intensities",
	"r_lightTweakAmbient": "Ambient light strength",
	"r_lightTweakAmbientColor": "Light ambient color",
	"r_lightTweakSunColor": "Sun color",
	"r_lightTweakSunDiffuseColor": "Sun diffuse color",
	"r_lightTweakSunDirection": "Sun direction in degrees",
	"r_lightTweakSunLight": "Sunlight strength",
	"r_loadForRenderer": "Set to false to disable dx allocations (for dedicated server mode)",
	"r_loadingScreen": "True if the game is playing a loading movie",
	"r_lockPvs": "Request to lock the viewpoint used for determining what is visible to the current position and direction",
	"r_lockPvsInCode": "Indicates if pvslock is currently on, in code. Only code should modified this dvar",
	"r_lodBiasRigid": "Bias the level of detail distance for rigid models (negative increases detail)",
	"r_lodBiasSkinned": "Bias the level of detail distance for skinned models (negative increases detail)",
	"r_lodScaleRigid": "Scale the level of detail distance for rigid models (larger reduces detail)",
	"r_lodScaleSkinned": "Scale the level of detail distance for skinned models (larger reduces detail)",
	"r_lowestLodDist": "Distance for lowest level of detail",
	"r_lowLodDist": "Distance for low level of detail",
	"r_materialXYZ": "material color checker XYZ d65 coords",
	"r_mediumLodDist": "Distance for medium level of detail",
	"r_missile_cam_debug_display": "Show missile camera debug overlay",
	"r_modelLimit": "Maximum number of models drawn simultaneously",
	"r_modelVertColor": "Set to 0 to replace all model vertex colors with white when loaded",
	"r_monitor": "Index of the monitor to use in a multi monitor system; 0 picks automatically.",
	"r_monitorCount": "Number of monitors connected.",
	"r_multi_extracam_debug": "-1 is disable, >0 is index of current active multi-extracam, when r_missile_cam_debug_display==3 mode",
	"r_multiGpu": "Optimize for multiple GPUs (if present)",
	"r_noipak": "do not load/stream images from ipak(pc only)",
	"r_norefresh": "Skips all rendering.  Useful for benchmarking.",
	"r_normalMap": "Lerp all normal maps to a flat normal map",
	"r_num_viewports": "number of viewports to expect to render",
	"r_occlusionMap": "Replace all occlusion maps",
	"r_open_automate": "Enable Nvidia Open Automate testing",
	"r_outdoorAwayBias": "Affects the height map lookup for making sure snow doesn't go indoors",
	"r_outdoorDownBias": "Affects the height map lookup for making sure snow doesn't go indoors",
	"r_outdoorFeather": "Outdoor z-feathering value",
	"r_picmip": "Picmip level of color maps.  If r_picmip_manual is 0, this is read-only.",
	"r_picmip_bump": "Picmip level of normal maps.  If r_picmip_manual is 0, this is read-only.",
	"r_picmip_manual": "If 0, picmip is set automatically.  If 1, picmip is set based on the other r_picmip dvars.",
	"r_picmip_spec": "Picmip level of specular maps.  If r_picmip_manual is 0, this is read-only.",
	"r_poisonFX_blurMax": "blur max",
	"r_poisonFX_blurMin": "blur min",
	"r_poisonFX_debug_enable": "Enable the poison effect",
	"r_poisonFX_dvisionX": "amount of double vision x",
	"r_poisonFX_pulse": "pulse rate for distortion",
	"r_portalMinRecurseDepth": "Ignore r_portalMinClipArea for portals with fewer than this many parent portals.",
	"r_portalWalkLimit": "Stop portal recursion after this many iterations.  Useful for debugging portal errors.",
	"r_previousFullscreen": "Prevous fullscreen mode (fullscreen, fullscreen window)",
	"r_primaryLightTweakDiffuseStrength": "Tweak the diffuse intensity for primary lights",
	"r_primaryLightTweakSpecularStrength": "Tweak the specular intensity for primary lights",
	"r_primaryLightUseTweaks": "Use primary light intensity tweaks",
	"r_remotescreen_renderlastframe": "toggles if remote screen update draws the last frame",
	"r_resampleScene": "Upscale the frame buffer with sharpen filter and color correction.",
	"r_resolution": "Console Resolution setting.",
	"r_reviveFX_debug": "Enable the revive effect debug",
	"r_reviveFX_edgeAmount": "edge effect amount",
	"r_reviveFX_edgeColorTemp": "edge color temp",
	"r_reviveFX_edgeContrast": "edge contrast adjust RGB",
	"r_reviveFX_edgeMaskAdjust": "edge mask expansion contraction",
	"r_reviveFX_edgeOffset": "edge tv style brightness adjust RGB",
	"r_reviveFX_edgeSaturation": "edge saturation",
	"r_reviveFX_edgeScale": "edge scale (tint) adjust RGB",
	"r_rimIntensity": "Rim intensity for character skin/cloth",
	"r_rimIntensity_debug": "Enable the rim intensity debug",
	"r_scaleViewport": "Scale 3D viewports by this fraction.  Use this to see if framerate is pixel shader bound.",
	"r_seethru_decal_enable": "Toggles see-through impact holes",
	"r_shader_constant_set_debug_range": "How far to draw scs debug view",
	"r_shader_constant_set_enable": "enables shader constant sets",
	"r_shaderDebugA": "Shader Debug A",
	"r_shaderDebugB": "Shader Debug B",
	"r_shaderDebugC": "Shader Debug C",
	"r_shaderWarmingPerFrame": "Incremental number of shaders to warm per frame",
	"r_showForcedInvisibleCells": "Only draw cells that are forced to be off.",
	"r_showLightGrid": "Show light grid debugging information",
	"r_showLightingOrigins": "Show lighting origins for models",
	"r_showMissingLightGrid": "Use rainbow colors for entities that are outside the light grid",
	"r_showOutdoorVolumeDebug": "Toggles the display of particle outdoor volume debug",
	"r_showPenetration": "Shows materials tagged with 'nopenetrate",
	"r_showReflectionProbeSelection": "Show reflection probe selection",
	"r_showSunDirectionDebug": "Toggles the display of sun direction debug",
	"r_singleCell": "Only draw things in the same cell as the camera.  Most useful for seeing how big the current cell is.",
	"r_skinnedCacheOverflowLodMaxScale": "Maximum LOD scale when skinned vertex cache is overflowed",
	"r_skinnedCacheOverflowLodScaleDecay": "Amount of time it takes the LOD scale to settle back to 1.0f after it overflowed",
	"r_skipPvs": "Skipt the determination of what is in the potentially visible set (disables most drawing)",
	"r_sky_intensity_angle0": "angle0 of sky intensity",
	"r_sky_intensity_angle1": "angle1 of sky intensity",
	"r_sky_intensity_factor0": "angle0 of sky intensity",
	"r_sky_intensity_factor1": "angle1 of sky intensity",
	"r_sky_intensity_showDebugDisplay": "Enables sky intensity debugging display",
	"r_skyColorTemp": "Sky box color temp.",
	"r_skyRotation": "Sky rotation angle.",
	"r_skyTransition": "Sky transition blend factor.",
	"r_smp_worker": "Process renderer front end in a separate thread",
	"r_smp_worker_threads": "Number of worker threads",
	"r_sortBackToFront": "Sort transparent models back to front.",
	"r_sortDrawSurfsBsp": "Sort BSP draw surfaces.",
	"r_sortDrawSurfsStaticModel": "Sort static model draw surfaces.",
	"r_specularMap": "Replace all specular maps",
	"r_spotLightEntityShadows": "Enable entity shadows for spot lights.",
	"r_spotLightShadows": "Enable shadows for spot lights.",
	"r_spotLightSModelShadows": "Enable static model shadows for spot lights.",
	"r_ssao": "Enable SSAO.",
	"r_ssaoBias": "SSAO bias.",
	"r_ssaoDebug": "SSAO debug.",
	"r_ssaoIntensity": "SSAO intensity.",
	"r_ssaoRadius": "SSAO radius.",
	"r_ssaoScale": "SSAO scale.",
	"r_stereo3DAvailable": "3D Mode available",
	"r_stereo3DEyeSeparation": "3D eye separation",
	"r_stereo3DEyeSeparationScaler": "3D eye separation scaler (adjustment to separation used from scripts)",
	"r_stereo3DIPD": "interpupillary distance",
	"r_stereo3DMode": "3D Rendering mode",
	"r_stereo3DOn": "3D on off toggle",
	"r_stereoFocusDepth": "3D eye focus depth",
	"r_stereoGunShift": "3D gun shift",
	"r_stereoTurretShift": "3D turret shift",
	"r_sun_from_dvars": "Set sun flare values from dvars rather than the level",
	"r_sun_fx_position": "Position in degrees of the sun effect",
	"r_sunblind_fadein": "time in seconds to fade blind from 0% to 100%",
	"r_sunblind_fadeout": "time in seconds to fade blind from 100% to 0%",
	"r_sunblind_max_angle": "angle from sun in degrees inside which blinding is max",
	"r_sunblind_max_darken": "0-1 fraction for how black the world is at max blind",
	"r_sunblind_min_angle": "angle from sun in degrees outside which blinding is 0",
	"r_sunflare_fadein": "time in seconds to fade alpha from 0% to 100%",
	"r_sunflare_fadeout": "time in seconds to fade alpha from 100% to 0%",
	"r_sunflare_max_alpha": "0-1 vertex color and alpha of sun at max effect",
	"r_sunflare_max_angle": "angle from sun in degrees inside which effect is max",
	"r_sunflare_max_size": "largest size of flare effect in pixels at 640x480",
	"r_sunflare_min_angle": "angle from sun in degrees outside which effect is 0",
	"r_sunflare_min_size": "smallest size of flare effect in pixels at 640x480",
	"r_sunflare_shader": "name for flare effect; can be any material",
	"r_sunFlareTint": "Sun Flare Sprite Color Tint",
	"r_sunglare_fadein": "time in seconds to fade glare from 0% to 100%",
	"r_sunglare_fadeout": "time in seconds to fade glare from 100% to 0%",
	"r_sunglare_max_angle": "angle from sun in degrees inside which glare is minimum",
	"r_sunglare_max_lighten": "0-1 fraction for how white the world is at max glare",
	"r_sunglare_min_angle": "angle from sun in degrees inside which glare is minimum",
	"r_sunsprite_shader": "Position in degrees of the sun effect",
	"r_sunsprite_size": "diameter in pixels at 640x480 and 80 fov",
	"r_superflare_drawlist": "supreflare drawlist selection.",
	"r_superFlareDraw": "toggle superflare rendering",
	"r_swrk_override_characterCharredAmount": "overrides the __characterCharredAmount Shaderworks tweak",
	"r_swrk_override_characterDissolveColor": "overrides the __characterDissolveColor Shaderworks tweak",
	"r_swrk_override_wetness": "Overrides the character wetness.",
	"r_tension_enable": "Toggles tension",
	"r_texFilterAnisoMax": "Maximum anisotropy to use for texture filtering",
	"r_texFilterAnisoMin": "mouseSensitivity",
	"r_texFilterDisable": "Disables all texture filtering (uses nearest only.)",
	"r_texFilterMipBias": "Change the mipmap bias",
	"r_texFilterMipMode": "Forces all mipmaps to use a particular blend between levels (or disables mipping.)",
	"r_texFilterQuality": "Texture filtering quality.",
	"r_txaa": "Enable TXAA.",
	"r_txaaDepth1": "TXAA depth1",
	"r_txaaDepth2": "TXAA depth2",
	"r_txaaMode": "TXAA mode.",
	"r_txaaMotion1": "TXAA motion1",
	"r_txaaMotion2": "TXAA motion2",
	"r_txaaSupported": "True if TXAA is supported.",
	"r_ui3d_debug_display": "Show UI3D debug overlay",
	"r_ui3d_h": "ui3d texture window height",
	"r_ui3d_use_debug_values": "Use UI debug values",
	"r_ui3d_w": "ui3d texture window width",
	"r_ui3d_x": "ui3d texture window x",
	"r_ui3d_y": "ui3d texture window y",
	"r_vc_compile": "r_remotescreen_renderlastframe",
	"r_viewportBackingColor": "Color to clear the frame buffer with before compositing viewportsr_clearColor2",
	"r_vsync": "Enable v-sync before drawing the next frame to avoid 'tearing' artifacts.",
	"r_vsyncThreshold": "Specify threshold percentage for allowed vsync 'tearing",
	"r_warmShaders": "Set to true to warm pixel shaders next frame",
	"r_waterFogTest": "Enable Water Fog Test.",
	"r_waterSheetingFX_allowed": "Enable the water sheeting effect",
	"r_waterSheetingFX_distortionScaleFactor": "Distortion uv scales (Default to 1)",
	"r_waterSheetingFX_enable": "Enable the water sheeting effect",
	"r_waterSheetingFX_magnitude": "Distortion magnitude",
	"r_waterSheetingFX_radius": "Tweak dev var; Glow radius in pixels at 640x480",
	"r_waterWaveAmplitude": "water wave amplitude",
	"r_waterWaveAngle": "water wave angle",
	"r_waterWaveBase": "water base height",
	"r_waterWaveNormalScale": "water normal scale",
	"r_waterWavePhase": "water wave phase",
	"r_waterWaveScriptShader0": "water shader parameters mapped to shader constant 'motionblurDirectionAndMagnitude",
	"r_waterWaveScriptShader1": "water shader parameters mapped to shader constant 'bloomScale",
	"r_waterWaveSpeed": "water wave speed",
	"r_waterWaveSteepness": "water wave steepness",
	"r_waterWaveWavelength": "water wave wavelength",
	"r_zbufferDebug": "debug zbuffer display",
	"r_zbufferDebugRange": "debug zbufffer max display range",
	"r_zebrastripe": "Material intensity threshold, 1 = Diffuse Black, 2 = Macbeth Black, 3 = 18% Average Grey",
	"r_zfar": "Change the distance at which culling fog reaches 100% opacity; 0 is off",
	"r_znear": "Things closer than this aren't drawn.  Reducing this increases z-fighting in the distance.",
	"r_zombieDarkness": "zombie darkness postfx",
	"r_zombieDisableEarthEffect": "Disable Earth Effect",
	"r_zombieDisableSlideEffect": "Disable Slide Effect",
	"r_zombieNameAllowDevList": "Allow zombie name to be from dev list",
	"r_zombieNameAllowFriendsList": "Allow zombie name to be from friends list",
	"radius_damage_debug": "Turn on debug lines for radius damage traces",
	"ragdoll_baselerp_time": "Default time ragdoll baselerp bones take to reach the base pose",
	"ragdoll_bullet_force": "Bullet force applied to ragdolls",
	"ragdoll_bullet_upbias": "Upward bias applied to ragdoll bullet effects",
	"ragdoll_debug": "Draw ragdoll debug info (bitflags)",
	"ragdoll_enable": "Turn on ragdoll death animations",
	"ragdoll_explode_force": "Explosive force applied to ragdolls",
	"ragdoll_explode_upbias": "Upwards bias applied to ragdoll explosion effects",
	"ragdoll_fps": "Ragdoll update frames per second",
	"ragdoll_jitter_scale": "Scale up or down the effect of physics jitter on ragdolls",
	"ragdoll_jointlerp_time": "Default time taken to lerp down ragdoll joint friction",
	"ragdoll_max_life": "Max lifetime of a ragdoll system in msec",
	"ragdoll_reactivation_cutoff": "Ragdoll reactivation distance cutoff",
	"ragdoll_rotvel_scale": "Ragdoll rotational velocity estimate scale",
	"ragdoll_self_collision_scale": "Scale the size of the collision capsules used to prevent ragdoll limbs from interpenetrating",
	"rate": "Player's preferred baud rate",
	"rcon_password": "Password for the rcon command",
	"recordPointsSpent": "Record spending through eventRecordBin",
	"redactionDisplayTime": "Time that it should be displayed for.",
	"redactionFadeDuration": "Fade duration time.",
	"redactionStartStrokeTime": "Time before the stroke starts.",
	"redactionStrokeTime": "Time it takes to complete the redaction stroke.",
	"reliableResendTime": "Amount of time (in ms) to wait before resending an unack'd reliable message",
	"reliableTimeoutTime": "Amount of time (in ms) to wait before timing out a client for not ack'ing a message",
	"reportUserInterval": "The interval in minutes you wait before getting another vote on this console as long as the console is turned on.",
	"revive_time_taken": "The time it takes to revive a player in last stand.",
	"riotshield_assist_time": "Time in seconds to receive assist points from the death of a player who's damage has been blocked by a riotshield",
	"riotshield_bullet_damage_scale": "Value to scale bullet damage to deployed riotshield.",
	"riotshield_damage_score_max": "The amount of damage blocked before score awarded is nerfed.",
	"riotshield_damage_score_threshold": "The amount of damage blocked with the riotshield to receive a score bonus.",
	"riotshield_deploy_limit_radius": "Min distance deployed riotshields must be from each other.",
	"riotshield_deploy_pitch_max": "Max surface pitch angle to allow riotshield deployment",
	"riotshield_deploy_roll_max": "Max surface roll angle to allow riotshield deployment",
	"riotshield_deploy_zdiff_max": "Max height difference allowed between plant surface and player origin",
	"riotshield_deployed_health": "Deployed riotshield health.",
	"riotshield_destroyed_cleanup_time": "Time (in seconds) destroyed riotshield model persists before disappearing",
	"riotshield_explosive_damage_scale": "Value to scale explosive damage to deployed riotshield..",
	"riotshield_melee_damage_scale": "Value to scale melee damage to deployed riotshield.",
	"riotshield_projectile_damage_scale": "Value to scale projectile damage to deployed riotshield.",
	"scr_dynamic_source_loading": "Load and then free source when reporting errors.  If false, keep source loaded.",
	"scr_team_fftype": "Friendly fire status",
	"scr_writeConfigStrings": "Special script mode for writing config string files",
	"sd_can_switch_device": "Allow Switching sound device",
	"sd_xa2_device_guid": "prefered audio device",
	"sd_xa2_device_name": "Available Sound devices",
	"sd_xa2_num_devices": "Number of xaudio2 devices",
	"searchSessionDedicatedGeoMin": "Number of geotiers that must match before we'll join a server",
	"searchSessionDedicatedMaxPing": "Max latency for considering a server joinable",
	"searchSessionGeo1Weight": "searchSessionSkillWeight",
	"searchSessionGeo2Weight": "searchSessionGeo1Weight",
	"searchSessionGeo3Weight": "searchSessionGeo2Weight",
	"searchSessionGeo4Weight": "searchSessionGeo3Weight",
	"searchSessionGeoMin": "Minimum number of geo tiers that must match.",
	"searchSessionIsEmpty": "Geographical loc latitude weight for weighted distance matchmaking queries",
	"searchSessionMapPackFlags": "DLC flags to include in matchmaking query.",
	"searchSessionMaxIntervalTime": "Max interval time between search session searches.",
	"searchSessionMaxIntervalTimeBeforeUnpark": "Max interval time between before we search for a parked dedicated server.",
	"searchSessionNextTaskDelay": "The delay after the task succeeds that we excute the next find sessions",
	"searchSessionRandom_0": "Random chance used in matchmaking",
	"searchSessionRandom_1": "Random chance used in matchmaking",
	"searchSessionSkillWeight": "searchSessionMapPackFlags",
	"selectedFriendIndex": "Currently selected friend index.",
	"selectedFriendName": "The name of the currently selected friend.",
	"selectedGroupIndex": "Currently selected group index",
	"selectedMenuItemIndex": "Current selected event index.",
	"selectedPlayerXuid": "Currently selected player xuid.",
	"session_nonblocking": "Non-blocking Session code",
	"sessionSearchMaxAttempts": "Number of search retries before giving up.",
	"sessionTaskFailDebug": "Debug taskmanager 2 task failures.",
	"shieldBlastDamageProtection_120": "How much protection a shield has against an explosion.  0.0 is none, 1.0 is full.  For explosions within a 120-degree arc of the shield.",
	"shieldBlastDamageProtection_180": "How much protection a shield has against an explosion.  0.0 is none, 1.0 is full.  For explosions within a 180-degree arc of the shield.",
	"shieldBlastDamageProtection_30": "How much protection a shield has against an explosion.  0.0 is none, 1.0 is full.  For explosions within a 30-degree arc of the shield.",
	"shieldBlastDamageProtection_60": "How much protection a shield has against an explosion.  0.0 is none, 1.0 is full.  For explosions within a 60-degree arc of the shield.",
	"shieldDeployShakeDuration": "Viewmodel shake duration for riotshield deploy.",
	"shieldDeployShakeScale": "Viewmodel shake scale for riotshield deploy.",
	"shieldImpactBulletShakeDuration": "Viewmodel shake duration for bullet impacts.",
	"shieldImpactBulletShakeScale": "Viewmodel shake scale for bullet impacts.",
	"shieldImpactExplosionHighShakeDuration": "Viewmodel shake duration for strong splash damage.",
	"shieldImpactExplosionHighShakeScale": "Viewmodel shake scale for strong splash damage.",
	"shieldImpactExplosionLowShakeDuration": "Viewmodel shake duration for weak splash damage.",
	"shieldImpactExplosionLowShakeScale": "Viewmodel shake scale for weak splash damage.",
	"shieldImpactExplosionThreshold": "Pre-shield splash damage that is above this will be 'strong.",
	"shieldImpactMissileShakeDuration": "Viewmodel shake duration for direct missile impacts.",
	"shieldImpactMissileShakeScale": "Viewmodel shake scale for direct missile impacts.",
	"shieldPlayerBulletProtectionDegrees": "Bullets fired at a riotshield-bearing player will be blocked if they are within this many degrees of the player's forward direction.  Higher value means wider protection.",
	"shortversion": "Short game version",
	"shoutcastSelectedClient": "Shoutcaster's currently selected clientNum.",
	"showVisionSetDebugInfo": "Enables visionset debug info",
	"skill_scoreBeta": "Beta value for score based skill calculation",
	"skill_scoreRange": "Absolute maximum value for (score) skill rating",
	"skill_teamBeta": "Beta value for team based skill calculation",
	"skill_teamRange": "Absolute maximum value for (team) skill rating",
	"sm_enable": "Enable shadow mapping",
	"sm_fastSunShadow": "Fast sun shadow",
	"sm_maxLights": "Limits how many primary lights can have shadow maps",
	"sm_polygonOffsetBias": "Shadow map offset bias",
	"sm_polygonOffsetScale": "Shadow map offset scale",
	"sm_spotEnable": "Enable spot shadow mapping from script",
	"sm_spotQuality": "Spot shadow quality",
	"sm_spotShadowFadeTime": "How many seconds it takes for a primary light shadow map to fade in or out",
	"sm_spotShadowLargeRadiusScale": "Radius scaler for large spot shadow switch over",
	"sm_strictCull": "Strict shadow map cull",
	"sm_sunAlwaysCastsShadow": "forces sun to always do shadow mapping, from script",
	"sm_sunEnable": "Enable sun shadow mapping from script",
	"sm_sunQuality": "Sun shadow quality",
	"sm_sunSampleSizeNear": "Shadow sample size",
	"sm_sunShadowCenter": "Sun shadow center, 0 0 0 means don't override",
	"sm_sunShadowScale": "Sun shadow scale optimization",
	"sm_sunShadowSmall": "force quarter resolution sun shadow map",
	"sm_sunShadowSmallEnable": "use quarter resolution sun shadow map",
	"snd_autoSim": "turn on client side simulation of automatic gun sounds",
	"snd_autosim_window": "autosim window masking",
	"snd_boat_current_rpm": "scalar value for boat engine",
	"snd_boat_engine_off": "value for boat engine low/idle",
	"snd_boat_lerp_rpm": "scalar value for boat rpm",
	"snd_boat_pitch_high_max": "boat pitch high max",
	"snd_boat_pitch_high_min": "boat pitch high min",
	"snd_boat_pitch_idle_max": "boat pitch idle max",
	"snd_boat_pitch_idle_min": "boat pitch idle min",
	"snd_boat_pitch_low_max": "boat pitch low max",
	"snd_boat_pitch_low_min": "boat pitch low min",
	"snd_boat_pitch_med_max": "boat pitch med max",
	"snd_boat_pitch_med_min": "boat pitch med min",
	"snd_boat_rpm_high_fin_end": "rpm point where engine_high fade in begins",
	"snd_boat_rpm_high_start": "rpm point where engine_high start",
	"snd_boat_rpm_idle_end": "rpm point where engine_idle ends",
	"snd_boat_rpm_idle_fout_start": "rpm point where engine_idle begins to fade out",
	"snd_boat_rpm_low_end": "rpm point where engine_low ends",
	"snd_boat_rpm_low_fin_end": "rpm point where engine_low fade in ends",
	"snd_boat_rpm_low_fout_start": "rpm point where engine_low fade out begins",
	"snd_boat_rpm_low_start": "rpm point where engine_low start",
	"snd_boat_rpm_med_end": "rpm point where engine_medium ends",
	"snd_boat_rpm_med_fin_end": "rpm point where engine_med fade in ends",
	"snd_boat_rpm_med_fout_start": "rpm point where engine_med fade out begins",
	"snd_boat_rpm_med_start": "rpm point where engine_medium start",
	"snd_boat_rpm_scalar": "scalar value for boat rpm",
	"snd_boat_using_lerp_rpm": "scalar value for boat rpm",
	"snd_boat_water_fast_min": "boat water fast min",
	"snd_boat_water_idle_max": "boat water idle max",
	"snd_boat_water_pitch_max": "boat water pitch max",
	"snd_boat_water_slow_max": "boat water slow max",
	"snd_boat_water_slow_min": "boat water slow min",
	"snd_draw3D": "Draw the position and info of world sounds",
	"snd_drawInfo": "Draw debugging information for sounds",
	"snd_drawSort": "Sort debugging information for sounds",
	"snd_futz": "futz",
	"snd_jetgun_loop_start": "spin time elapse until loop sound starts playing",
	"snd_jetgun_pitch_end": "pitch where the loop ends",
	"snd_jetgun_pitch_start": "pitch where the loop starts",
	"snd_losOcclusion": "occlusion based off of LOS",
	"snd_max_ram_voice": "max ram voice count",
	"snd_max_stream_voice": "max stream voice count",
	"snd_minigun_loop_start": "spin time elapse until loop sound starts playing",
	"snd_minigun_pitch_end": "pitch where the loop ends",
	"snd_minigun_pitch_start": "pitch where the loop starts",
	"snd_ps3_vol_occlusion_attenuation_dry": "maximum dry volume occlusion attenuation for PS3",
	"snd_ps3_vol_occlusion_attenuation_wet": "maximum wet volume occlusion attenuation for PS3",
	"snd_speakerConfiguration": "Speaker configuration",
	"snd_throttle_reduce_vol": "ammount to reduce engine vol",
	"snd_throttle_time_held_down": "how long (ms) throttle is held before engine vol begins to decrease",
	"snd_trace_master": "trace master dsp",
	"snd_trace_reverb": "trace reverb dsp",
	"snd_trace_voice": "trace voice dsp",
	"spawnsystem_allow_culling": "Enables the culling of dangerous and low scoring points",
	"spawnsystem_badspawn_aggression_delay": "Report aggression to others that a player deals within this MS of spawning in",
	"spawnsystem_badspawn_damage_delay": "Report damage that occurs to a player within this MS of spawning in",
	"spawnsystem_badspawn_force_record": "Immediately after each client spawn, submit a corresponding badspawn report",
	"spawnsystem_danger_time": "When found to be dangerous (enemy LOS or telefrag) disable the point for this duration",
	"spawnsystem_debug": "Debug and rendering for the spawn system",
	"spawnsystem_debug_archive": "Sets the spawn system archive mode",
	"spawnsystem_debug_best_points": "Render best spawn point information",
	"spawnsystem_debug_influencer_pulse": "Influencers pulsate when enabled",
	"spawnsystem_debug_influencer_types": "Render spawn influencer information",
	"spawnsystem_debug_influencers": "Use colors to differentiate influencer types",
	"spawnsystem_debug_liveedit": "Do it, live edit now!",
	"spawnsystem_debug_player": "Name of player to show debug info for",
	"spawnsystem_debug_point_weights": "Render spawn point information",
	"spawnsystem_debug_points": "Render spawn point boxes. 2 = no depth test",
	"spawnsystem_debug_showclients": "Render archived clients",
	"spawnsystem_debug_sideswitched": "Switch to 'sideswitched' mode",
	"spawnsystem_debug_team": "Team to show debug info for",
	"spawnsystem_debug_visibility": "Render spawn point visibility checking",
	"spawnsystem_debug_visibility_time": "Length of time to render the visibility check",
	"spawnsystem_demo_enable_parsing": "Enables the usage of spawn debugging information embedded in the demo recordings",
	"spawnsystem_demo_max_written": "Limit for how many bytes we are allowed to write to the demo filespawnsystem_allow_non_team_spawns",
	"spawnsystem_enemy_influencer_stacking": "Combine all enemy player influencers",
	"spawnsystem_enemy_spawned_influencer_stacking": "Combine all enemy spawned influencers",
	"spawnsystem_friend_influencer_stacking": "Combine all friendly player influencers",
	"spawnsystem_old_vis_mask": "Switches back to old spawn vis mask without nosight",
	"spawnsystem_score_cull_min_points": "Make sure we always have at least this many points left after score culling",
	"spawnsystem_score_cull_percent": "Percentage of total spawn points that can be disabled due to low score at any time",
	"spawnsystem_score_cull_time_max": "Max time that any particular point can stay disabled due to low score",
	"spawnsystem_score_cull_time_min": "Min time that any particular point can stay disabled due to low score",
	"spawnsystem_sight_check_max_distance": "Max distance for the line of sight check",
	"spawnsystem_sight_height_offset": "Adjust Z for LOS test by this value",
	"spawnsystem_weapon_influencer_min_length": "Minimum lenght the line of sight check will drop the distance to",
	"spawnsystem_weapon_influencer_push_through": "Extend the line of sight distance this much after check",
	"spawnsystem_weapon_influencer_sight_check": "Do a line of sight check on the weapon influencer",
	"spawnsystem_weapon_influencer_update_interval": "How often to update the sight check in milliseconds",
	"splitscreen": "Current game is a splitscreen game",
	"splitscreen_lobbyPlayerCount": "Splitscreen lobby player count string.",
	"splitscreen_partyPlayerCount": "Splitscreen lobby party player count string.",
	"splitscreen_playerCount": "The number of players in a splitscreen game",
	"spmode": "Current game is a sp game",
	"stat_version": "Stats version number",
	"stats_version_check": "Reset stats if version numbers do not match",
	"statsLocationFatal": "If true, a zombie stats error will cause the game to end, if false a warning is printed to the console and the game continues",
	"stopspeed": "The player deceleration",
	"storeMapPackMaskToStats": "Store the installed Map-Pack Masks in the persistent stats",
	"sv_allowAnonymous": "Allow anonymous access",
	"sv_assistWorkers": "Enable server worker thread assist when idle",
	"sv_authenticating": "Names of all referenced Fast Files",
	"sv_badLoadoutAction": "Action to take when a client has a loadout invalid for their rankHash failed error %i",
	"sv_badRankAction": "Action to take when a client has rank / plevel that doesn't match the hash",
	"sv_bitfieldTracking": "send blackbox notifies when bitfields data exceeeds thresholds",
	"sv_cheats": "Enable cheats on the server",
	"sv_clientFpsLimit": "Limit clients FPS",
	"sv_clientside": "Used to toggle systems in script on and off on the server.",
	"sv_clientSideBullets": "If true, clients will synthesize tracers and bullet impacts",
	"sv_clientSideVehicles": "If true, vehicles will be predicted on the client reducing response time",
	"sv_connectionLogProbability": "Probability of uploading connection log data.",
	"sv_connectionLogSamplesPerSecond": "Number of samples per second per client.",
	"sv_connectTimeout": "seconds without any message when a client is loading",
	"sv_disableClientConsole": "Disallow remote clients from accessing the console",
	"sv_dwlsgerror": "Demonware LSG error",
	"sv_endGameIfISuck": "End the match if most of the players are lagged out",
	"sv_expensive_bullet_time": "MS threshold for reporting expensive bullet fire events to blackbox.",
	"sv_externalEventLoop": "Allow the event loop to run outside of the server frame",
	"sv_FakeRemoteClient": "If true script func numremoteclients() always returns at least 1.fxfrustumCutoff",
	"sv_fakeServerLoad": "Artificially load the server by this time in MS",
	"sv_fakeServerLoadRand": "Additional server load to add randomly each frame",
	"sv_FFCheckSums": "Fast File server checksums",
	"sv_FFNames": "Names of Fast Files used by the server",
	"sv_floodprotect": "Prevent malicious lagging by flooding the server with commands.  Is the number of client commands the server will process per 800ms.  0 means no flood protection.",
	"sv_hostname": "Host name of the server",
	"sv_iwdNames": "Names of IWD files used by the server",
	"sv_iwds": "IWD server checksums",
	"sv_keywords": "Server keywords",
	"sv_mapRotation": "List of maps for the server to play",
	"sv_mapRotationCurrent": "Current map in the map rotation",
	"sv_maxclients": "The maximum number of clients that can connect to a server",
	"sv_maxPhysExplosionSpheres": "-1 unlimited, otherwise max number of concurrent explosion sphere temp ents.",
	"sv_maxPing": "Maximum ping allowed on the server",
	"sv_minPing": "Minimum ping allowed on the server",
	"sv_network_fps": "Number of times per second the server checks for net messages",
	"sv_networkRateSolution": "Select different types of solutions for network rate / client movement issues.",
	"sv_noname": "Player name assigned to players that fail name validation",
	"sv_onlineHostSnapshotRateThrottled": "Enables sending snapshot to the host client during online matches according to standard policy.",
	"sv_paused": "Pause the server",
	"sv_playlistFetchInterval": "Interval in seconds between playlist fetches",
	"sv_privateClients": "Maximum number of private clients allowed on the server",
	"sv_privateClientsForClients": "The # of private clients (we send this to clients)",
	"sv_privatePassword": "password for the privateClient slots",
	"sv_pure": "Cannot use modified IWD files",
	"sv_rateBoostingAllowUnackDeltas": "Use smallest possible deltas on alternate frames when in 20hz mode",
	"sv_rateBoostingDebugForceSuspend": "Force rate boosting on/off in regular intervals",
	"sv_rateBoostingEnabled": "Determines whether we should allow rate boosting.",
	"sv_rateBoostingMaxUploadUsage": "Portion of the available bandwidth that we can use before we switch back to regular updates.",
	"sv_rateBoostingMinUploadScale": "Scale of the required bandwidth for current player limit needed to be able to send snapshots at a higher rate.",
	"sv_rateBoostingRecoverTime": "Time spent below upload usage limits before we can switch back to faster updates.",
	"sv_rateBoostingSuspendBadFramesCPU": "Number of bad CPU frames before we drop to a lower rate.",
	"sv_rateBoostingSuspendBadFramesCPUThreshold": "Duration at which a frame is considered bad (MS)",
	"sv_rateBoostingSuspendBadFramesCPUTimeout": "Reset bad CPU frames count if we don't get any for this duration (MS)",
	"sv_rateBoostingSuspendedMaxUploadUsage": "Portion of the available bandwidth that we can use before we switch back to faster updates.",
	"sv_reconnectlimit": "minimum seconds between connect messages",
	"sv_referencedFFCheckSums": "Checksum of all referenced Fast Files",
	"sv_referencedFFNames": "Names of all referenced Fast Files",
	"sv_referencedIwdNames": "Names of all referenced IWD files",
	"sv_referencedIwds": "Checksum of all referenced IWD files",
	"sv_restrictedTempEnts": "If true, certain temp ents are not sent - used in DOA.",
	"sv_running": "Server is running",
	"sv_serverLogClientPings": "Enable logging of client pings at intervals (ms)",
	"sv_timeout": "seconds without any message",
	"sv_voice": "Use server side voice communications",
	"sv_voiceQuality": "Voice quality",
	"sv_writeConfigStrings": "Write out the config string file",
	"sv_zombietime": "seconds to sync messages after disconnect",
	"systemlink": "Current game is a system link game",
	"teamsplitter_verbose": "Verbose debug output while splitting teams if true.",
	"terriblePing": "Just awful, limit of playability",
	"TestIntervalJitter": "ms jitter between test rounds",
	"throwback_enabled": "Enables throwbacks",
	"tickerHeaderWidth": "The width of the ticker header text used to align the the ticker message.",
	"timescale": "Scale time of each frame",
	"tree_bend": "bend amount of tree trunk",
	"tree_frequency": "frequency of tree bend oscillation",
	"tree_random": "random addition to bend amount of tree trunk",
	"tu10_demo_oldposInsteadOfMapCenter": "Use the oldpos instead of CL_GetMapCenter() when in freecam",
	"tu10_demo_skipBuildingDemoSnapshotDuringCinematicPlayback": "Enables skipping build of demo snapshots while the intro movie plays",
	"tu10_eliteMarketingOptInPopupEnabled": "enables Elite Marketing OptIn popup",
	"tu10_noProfileWriteSleep": "splitscreen_playerCount",
	"tu10_searchSessionIgnoreMapPacks": "searchSessionMaxIntervalTimeBeforeUnpark",
	"tu11_AddMapPackFlagsUserInfo": "Send availableMappackFlags out with the User info.",
	"tu11_cg_killstreak_target_diamond_when_emped": "If true, draw the lone of sight target highlighting when the owners body has been hit by an emp grenade.",
	"tu11_gateInGameMenusOnInitialPlayersConnectedRespondedTo": "For zombies, check if all the players are connected and we have the first snapshot before opening an ingame menu.",
	"tu11_handleLowmipReadErrors": "from LSB to MSB: 1=report TRACKER_LOWMIP_READ_ERRORS at 1; 2=report at 10; 3=report at 100; 4=report at 1000; 5=dirty disc at 10; 6=dirty disc at 100; 7=dirty disc at 1000; 8=texture dialog at 10; 9=at 100; 10=at 1000",
	"tu11_luiCompleteAnimationFix": "Enable fix for lui for completeAnimation setting the duration and time left to zero",
	"tu11_partymigrate_allowPrivatePartyClientsToHost": "partymigrate_MinScoreDiff",
	"tu11_partymigrate_useStdDev": "If true we'll use the standard devation of the clients latency as a tie-breaker instead of the clientnum",
	"tu11_partymigrate_WirelessLatencyIncrease": "percentage increase for wireless client latency during host selection",
	"tu11_player_keepZVelocity": "Keep the Z component of the player velocity when player is frozen",
	"tu11_resetGameModesOnCablePull": "If true, use the new Live_ErrorStopParty on xenon when Live_CheckNotifications handles a cable pull.",
	"tu11_returnChangedInUpdateClientInfoWhenRemovingAttachModel": "Enables fix in G_UpdateClientInfo where a change was not detected when removing an attachmodel from a client",
	"tu11_sendVoteToFBEnabled": "Dvar to enable/disable send vote to Facebook button on the voting confirmation screen.",
	"tu11_showGeoInfo": "If true we show the geo info in the sysinfo screen",
	"tu11_statsSetConnectionType": "Turn on to log connection type in stats blob, and update counters (global_connection_type_wireless & global_connection_type_wired)tu9_validateStatsOnSignout",
	"tu11_use_animscripted_blends": "Use a 0.2 second blend time when playing animscripted anims (only used by zombies).",
	"tu11_useMissileKnockbackHeldWeaponsOnly": "Don't allow missile kickback on non player held rockets.",
	"tu11_waitOnContent": "Wait for content to be discovered before allowing online play",
	"tu11_waitOnContentTimeout": "Time to wait for content to be discovered before allowing online play",
	"tu11_zombie_turret_placement_ignores_bodies": "Zombie turrets will ignore actors and players when true.",
	"tu12_always_switch_away_from_briefcase": "Always switch away from a briefcase weapon so we don't get stuck carring it around.",
	"tu12_cg_vehicleCamAboveWater": "If greater than 0, clamp the camera of third-person vehicles (rc-xd) to this number of units above the water plane.",
	"tu12_destructible_entity_radius_damage_fix": "If true, allows the destructible radius damage code to modify the damage dealt to the entity.",
	"tu12_mtxLostVoteChecks": "Additional MTX checks to hide the new flag on MTXes that lost the vote",
	"tu12_searchSessionOverrideGeoLocation": "searchSessionIgnoreMapPacks",
	"tu12_validate_bonus_cards_on_server": "Validate that a player has the necessary bonus card(s) equipped when giving loadout items.",
	"tu12_zm_force_center_cg_cursorhint": "Force cursorhints to be centered",
	"tu12_zm_stack_fire_fix": "For stack fire weapons, use the stack fire count from the weapon data instead of the clip size",
	"tu12_zm_stop_firing_when_overheated": "Force a stop to firing when an overheat weapon is overheated",
	"tu12_zombie_allow_switch_to_detonator_only": "Allow players to switch to a detonator weapon with no ammo.",
	"tu12_zombies_allow_hint_weapon_from_script": "Allow zombies scripts to call SetCursorHint(HINT_WEAPON,weapon).",
	"tu13_allow_no_player_melee_blood": "Allow no player melee blood effect",
	"tu13_bg_enableBulletWeaponBounce": "Safety dvar to disable the bouncing bullets (only enables in zombies and if the weapon has bForceBounce set)",
	"tu13_filterdedicatedserverresults": "If true we'll filter dedicated server results by geotier and ping",
	"tu13_recordContentAvailable": "Set this dvar to turn on/off available content recording.",
	"tu13_zm_check_traversal_max_z": "Don't allow actors to use traversal nodes without being close vertically",
	"tu14_aiAllowForceNoCullCheck": "Allows the AI to check EF2_FORCE_NO_CULL and pass the render flag on appropriately",
	"tu14_bg_chargeShotExponentialAmmoPerChargeLevel": "If set, the ammo required will be 'charge level -> ammo required': 1 -> 1, 2 -> 3, 3 -> 6.",
	"tu14_demo_enableHeliHeightLockExcludeFromDemo": "Use the new excludeFromDemo optional feature on heli_height_lockstu11_demoSendEventOnFailure",
	"tu14_initialize_groundEntityNum": "Initialize the value of entity.groundEntityNum to ENTITY_NONE.",
	"tu14_preventStartingChargeShotWhileFiring": "For chargeshot weapons, prevent starting a new chargeshot while the weapon is still firing",
	"tu14_reloadCustomGameTypesAfterFFOTD": "Turn on to reload the gametypesTable.csv after ffotd load",
	"tu14_resumeLobbyCountdown": "Resume xpartygo countdown at time left rather than reset to 10 each time",
	"tu15_quadrotorPathingFix": "Turn on the fix for quadrotor pathing in zombies DLC4.",
	"tu15_zombie_local_player_test_honors_client_server_divide": "Use sv_ cg_ appropriate means of determining if all players are local",
	"tu16_waitOnGhostLBRetrieval": "Wait for ghost leaderboard to be read.",
	"tu16_waitOnGhostLBRetrievalTimeout": "Timeout for reading the ghost leaderboard.",
	"tu2_delayComErrorForPlaylistRules": "Use a delayed com_error when erroring for playlist rules",
	"tu2_luiHacksDisabled": "Disable hacks in LUI for TU2",
	"tu2_partyCheckRulesAlways": "Check party eligibility every time we run playlist rules",
	"tu2_partyCheckRulesOnSetup": "Check party eligibility every time we setup the playlist",
	"tu2_stopPartyForPlaylistRules": "Stop the party when erroring for playlist rules",
	"tu3_canSetDvars": "Allow remote console to set CONFIG dvars",
	"tu3_disableDWGuests": "Disable guests from signing into DW",
	"tu3_resetStatsOnFailedValidate": "If true, stats will be completely reset on a failed validation",
	"tu4_checkStatsCheckSum": "Check the stats Checksum vs the backup stats",
	"tu4_checkXUIDBeforeStatsUpload": "Checks the XUID of the stats before uploading",
	"tu4_copyGamertagOnStatsDownload": "Copies the gamertag from live when stats are downloaded",
	"tu4_removeClientsFromInactivePartyToNotify": "Remove clients from partyToNotify when they are removed from the current active party or lobby.",
	"tu4_removeUsingXuidClientFromPartyToNotify": "Remove correct clients from partyToNotify when they are removed from the current active party or lobby.",
	"tu4_useRealXUIDForStats": "Use the XUID from Xbox Live not the cached on",
	"tu5_check_unique_attachments_enabled": "Use the check for unique attachments function",
	"tu5_uav_ads_fix": "This prevents the bit throw from being the fire button for grenades (and mines) with detonators.",
	"tu6_CaCImportVerifyDLCWeapons": "Verify DLC weapons on CAC import",
	"tu6_cg_destructible_radius_damage_enabled": "If true, allow the client destructible system to modify server authoritative piece health when dealing radius damage.",
	"tu6_checkNonPrimaryXUIDPS3": "Check the XUID of the primary player vs the XUID in the stats",
	"tu6_clearFileShareOnSignOut": "Clear Fileshare search results on profile sign out",
	"tu6_conflictingAttachmentCheck": "Switch for checking for conflicting attachments",
	"tu6_dynEnt_disable_rb_collision": "Disable rigid body collision for dyn ents with point or hinge constraints.",
	"tu6_dynEnt_small_cylinder_dimension": "Treats dyn ents with small cylinders less than this number in the X or Y as small for the purposes of angular velocity. Applies to dyn ents with point or hinge constraints. Set to 0 to disable.",
	"tu6_dynEnt_small_cylinder_max_avel": "Dyn ents with small cylinders will have their maximum angular velocity set to this value. Applies to dyn ents with point or hinge constraints.",
	"tu6_emblemVoting": "Allow emblem voting from the playercard",
	"tu6_enableDLCWeapons": "Enable DLC weapons in CAC",
	"tu6_execffotdlua": "Exec the FFOTD lua files after the ffotd_settings.cfg",
	"tu6_ignoreOtherModesDLC": "Ignore ZM<->MP DLC when checking for missing DLC.",
	"tu6_ignoreSeasonPass": "Ignore Season Pass when checking for missing DLC.",
	"tu6_marketingOptIn": "Enable Elite Marketing Opt In code",
	"tu6_perkBonusCardCheck": "Switch for checking bonus card perks",
	"tu6_player_jump_blocks_tac_insert": "If true, the act of the player jumping will cause the tactical insertion plant to fail.",
	"tu6_player_shallowWaterHeight": "If greater than 0, water height considered to be shallow - in which prone will be disallowed.",
	"tu6_verifyUnusedAttachmentSlotsCheck": "Switch for checking unused attachment slots are empty",
	"tu6_writeStatsXUIDOnGameStart": "Check and reset the XUID in the stats when creating the stable buffer",
	"tu7_3rdPersonSpecateFix": "Make sure we do not allow 3rd person spectating if the server has it disabled",
	"tu7_additionalGrenadeChecks": "additional grenade checks for valid itemindex and dangerclose bonuscard.",
	"tu7_botsCountAsPartyMembers": "During private matches, allow the party host to count the bot count as party members in order to transmit an accurate player count to clients",
	"tu7_cg_deathCamAboveWater": "Number of units above the water plane to clamp the death camera. Set to 0 to disable.",
	"tu7_clampMeleeChargeHorzLaunch": "Whether to clamp knife lunge launching Horizontally.",
	"tu7_clampMeleeChargeJumping": "Whether to clamp knife lunge jumping.",
	"tu7_clampMeleeChargeJumpingMaxZVel": "Max speed to clamp on the Z axis if the player is knife lunge jumping.",
	"tu7_fileshareRetry": "Retry fetching fileshare data on failure.",
	"tu7_fileshareShowFailure": "Show an error on screen on fileshare data failure",
	"tu7_itemOptionLocked": "perform stats check for unlockablesItemOptionLocked",
	"tu7_itemOptionLockedByChallenge": "perform stats check for itemOptionLockedByChallenge",
	"tu7_itemOptionLockedByChallengeResult": "result when the above stats check failes",
	"tu7_mapbased_killstreaks_fix": "If you cancelled a location based killstreak then tried to call it in again within a second it would not show the map",
	"tu7_partyDoublePartyCloseFix": "Awake the party lobby before shutting it down so it communicates correctly to clients.",
	"tu7_restoreBlur": "Restore blur on com_error",
	"tu7_setGuestStatsFetched": "When copying guest stats, set their stats status to fetched.",
	"tu7_skipStableStats": "Skip creating and comparing with stable stats for non public/league game modes.",
	"tu7_statsErrorBackup": "Error if an invalid stats access is requested on BACKUP stats.",
	"tu7_statsErrorNormal": "Error if an invalid stats access is requested on NORMAL stats.",
	"tu7_statsErrorOtherPlayer": "Error if an invalid stats access is requested on OTHERPLAYER stats.",
	"tu7_statsErrorStable": "Error if an invalid stats access is requested on STABLE stats.",
	"tu7_ui_multiteam_compass_fix": "Allow multiteam to use BIT_RADAR_CLIENT so that it can be set on a per client basis.",
	"tu7_verifyStableStats": "Verify that the stable stats buffer was populated before trying to run the comparison",
	"tu8_additionalMTXChecks": "additional mtx checks for cac weapon option validation",
	"tu8_autoRestartSteamServerFailed": "Auto restart dedicated server if SteamServer interface is not available or failed to initialize",
	"tu8_cancelMatchStartReturnValue": "Have the LUI function PartyHostCancelStartMatch return true for cancelling the start matach (success) and false for fail.",
	"tu8_comerrorSteamServerFailed": "ERROR_DROP game client if SteamServer interface is not available or failed to initialize",
	"tu8_defaultClassSetCount": "Number of class sets available when not purchased",
	"tu8_mtx_enabled": "Enable microtransactions, 0 - completely disabled, 1 - usabled if purchased, 2 - completely enabled",
	"tu8_nullStatsBuffer": "Return a null stats buffer if a stats access error occurs",
	"tu8_partyDisconnectExtraPacket": "When disconnecting from a party send an extra disconnect package in case we have not parsed the party members yet.",
	"tu8_purchasedClassSetCount": "Number of class sets available when purchased",
	"tu8_script_mover_workaround": "If true, don't allow non-moving platform entities to have their origin/angles reset",
	"tu8_storeContentInfoInStats": "Store players content ownership in the stats blob",
	"tu8_trackStatsAccessError": "Track stats access errors in event records.",
	"tu8_useClassSets": "Enable class sets",
	"tu9_clearedMapPackFlagsFix": "Ensure that the availableMapPackFlags variable gets set correctly when the party member is cleared.",
	"tu9_deletePresenceSessionInGraveYardFix": "Fix for DT# 112696 - X360: TCR MPS 115: Title crashes when quitting out with a formerly active profile in a splitscreen Multiplayer game",
	"tu9_ingnoreValidateWeaponOnDeath": "Use TU9 fix for not switching weapons after a player's death.",
	"tu9_keepSwappedPlayersInPartyToNotify": "When a player is swapped slots in a party, don't remove them from the partyToNotify.",
	"tu9_projectile_dobj_fix": "Cleanup ET_MISSILE DObjs in CG_ShutdownEntity",
	"tu9_steamCheckMTX": "SteamServer checks mtx ownership",
	"tu9_steamRetryServerInit": "SteamServer retries to steam server init",
	"tu9_tank_minimap_fix": "Show the tank on the minimap if the player fires either the rockets or the turret",
	"tu9_testMissingContentPacks": "When the DLC flag changes for a player, sent the result to Demonware.",
	"tu9_turret_mark_rate": "Rate the turret will generate marks.",
	"tu_10_matchRatingSampleChance": "Sets the sample chance for the Match Rating Popup",
	"tu_allowDLCWeaponsByOwnership": "Whether to use owned or mounted as the precondition for enabling DLC items",
	"tu_cleanUpTurretOnDisconnect": "Tell the turret to stop being used if the player disconnects",
	"tu_deferScriptMissileDetonation": "Defer G_ExplodeMissile() till after origin is updated in G_RunMissile()",
	"tu_enforceRechamberOnSwitch": "Forces a bolt action weapon to rechamber if not enough time has passed between switching weapons",
	"tu_isolateDamageFlash": "Drive damage flash overlay from isolated variable instead of view kick pitch",
	"tu_limitGrenadeImpacts": "Use missileTargetEnt to limit impact damage to the first impact",
	"turret_KillstreakTargetTime": "Time in milliseconds that a TOW turret will stay locked on a target before verifying line of sight",
	"turret_placement_trace_maxs": "maxs of the bound used for the placement trace",
	"turret_placement_trace_mins": "mins of the bound used for the placement trace",
	"turret_SentryTargetTime": "Time in milliseconds that a sentry turret will stay locked on a target before verifying line of sight",
	"turret_TargetLeadBias": "The number of server frames used to predict an entity's position. Used for turret aiming when firing.",
	"turretplacement_traceOffset": "The amount to offset the trace start used in turret placement.",
	"turretplacement_useTraceOffset": "Use the offset in turret placement",
	"turretPlayerAvoidScale": "Auto turrets will try to avoid the player.  They will not choose a target that is within a cone around the player.  The diameter of the cone is the player's height, so the cone is smaller, the farther the player is from the turret.  Use this dvar to scale the cone size.",
	"twitchEnabled": "Twitch Enabled",
	"typeWriterCod7LetterFXTime": "Time it takes for a letter to come in.",
	"ui_allow_classchange": "Whether the UI should allow changing class",
	"ui_ammo_stock_width": "Width of the ammo stock shown on the right.",
	"ui_animSpeedScale": "Scales the UI animation speed.",
	"ui_autoContinue": "Automatically 'click to continue' after loading a level",
	"ui_bigFont": "Big font scale",
	"ui_borderLowLightScale": "Scales the border color for the lowlight color on certain UI borders",
	"ui_busyBlockIngameMenu": "1 if ingame menu should be blocked for pending action",
	"ui_currentMap": "Current map index",
	"ui_customModeDesc": "Description for the custom game mode.",
	"ui_customModeEditDesc": "Description for the custom game mode while editing.",
	"ui_customModeEditName": "Name to give the currently edited custom game mode when editing is complete",
	"ui_customModeName": "Custom game mode name",
	"ui_demoname": "Current selected demo name",
	"ui_detailedMM": "Show detailed matchmaking info in the UI",
	"ui_display_aar": "true if returning from a level and need to display aar",
	"ui_drawBuildNumber": "Draws or hides the build number",
	"ui_drawOldUI": "Draw the old UI",
	"ui_drawSpinnerAfterMovie": "creditsScrollScale",
	"ui_DSPPromotionInterval": "Duration between DSP Promotion popup occurrence.",
	"ui_email_address": "Email address",
	"ui_enableDSPPromotion": "Set this dvar to enable the DSP promotion screen.",
	"ui_enableGhostUpsellPopup": "Set this dvar to enable the Ghost Upsell popup.",
	"ui_enableSPReminderPopup": "Set this dvar to enable the season pass reminder popup.",
	"ui_errorMessage": "Most recent error message",
	"ui_errorMessageDebug": "Most recent debug error message",
	"ui_errorTitle": "Title of the most recent error message",
	"ui_ethernetLinkActive": "true if a network connection is available(and active)",
	"ui_friendsListOpen": "True when viewing Friends List.",
	"ui_fxFontColor": "Color of font face",
	"ui_fxFontGlowColor": "Color of the font glow",
	"ui_fxFontOutlineColor": "Color of the outline",
	"ui_fxFontShadowColor": "Color of the shadow",
	"ui_gametype": "Current game type",
	"ui_ghostUpsellPopupInterval": "Duration between Ghost Upsell popup occurrence.",
	"ui_heatMapColor": "Heat Map Blob Color",
	"ui_heatMapColorForPlayer": "Heat Map Blob Color for player deaths only",
	"ui_hideLeaderboards": "Hide leaderboard buttons in the UI",
	"ui_hideMiniLeaderboards": "Hide mini leaderboards",
	"ui_hideminimap": "map toggle",
	"ui_hud_hardcore": "Whether the HUD should be suppressed for hardcore mode",
	"ui_hud_visible": "Whether the 2D HUD should be displayed or not.",
	"ui_ignoreMousePos": "Whether there are multiple text entries in the menu.",
	"ui_inGameStoreVisible": "Dvar to on/off ingamestore button on the main menu.",
	"ui_isClanMember": "True when member belongs to clan",
	"ui_isDLCPopupEnabled": "Dvar set when we want to show the DLC popup.",
	"ui_levelEra": "Int for the year/era of the current level. Default is 2020.",
	"ui_listboxIndex": "Current position in a listbox. Used to position associated drop down menu.",
	"ui_loadscreenTimeout": "Times out the loading screen stall if we cant load the texture because the content is missing.",
	"ui_mapCount": "Number of maps the player has",
	"ui_mapname": "Current map name",
	"ui_menuLvlNotify": "If set, send code notification to script; default off",
	"ui_MOTDScrollRate": "The rate at which UI_SCROLLING_MOTD_MESSAGE ownerdraw scrolls the text.",
	"ui_mtxid": "MTX id for the product that needs to be focused while opening the store after the com_error on PS3.",
	"ui_multiplayer": "True if the game is multiplayer",
	"ui_netSource": "The network source where:",
	"ui_party_download_bar_color": "Color of the party download progress bar.",
	"ui_party_download_bar_height": "Height of each download progress bar.",
	"ui_partyFull": "True if the current party is full.",
	"ui_playercardOpen": "True when in game gamercard is open.",
	"ui_playerListOpen": "True when viewing recent met player List.",
	"ui_playlistPopulationRefreshTime": "The number of seconds before the playlist population heatmap is refreshed.",
	"ui_prevTextEntryBox": "Index of the previous text entry box.",
	"ui_readingSaveDevice": "Whether or not the reading save device menu is open.",
	"ui_right_ammo_width": "Width of the ammo shown on the right.",
	"ui_scrollBarWidth": "controls scroll bar width used by scrolling custom element",
	"ui_scrollEmptySpaceHeightPercentage": "controls empty space height percentage for scroll bar used by scrolling custom element",
	"ui_scrollFontScale": "controls font scale for scrolling custom element",
	"ui_scrollMinUpdateInterval": "controls scrolling custom element min update time interval (ms)",
	"ui_scrollMOTDDelay": "The delay before the UI_SCROLLING_MOTD_MESSAGE ownerdraw begins scrolling the text.",
	"ui_scrollMOTDYOffset": "The y offset of the text scrolled using the UI_SCROLLING_MOTD_MESSAGE ownerdraw.",
	"ui_scrollMOTDYOffsetResetDelay": "The delay after the UI_SCROLLING_MOTD_MESSAGE ownerdraw finishes scrolling the text",
	"ui_scrollSpeed": "controls scrolling speed for custom scrolling renderer foudn in lui custom element",
	"ui_scrollTextDelay": "The delay before the UI_SCROLLING_LONG_MESSAGE ownerdraw begins scrolling the text.",
	"ui_scrollTextScrollRate": "The rate at which UI_SCROLLING_LONG_MESSAGE ownerdraw scrolls the text.",
	"ui_scrollTextYOffset": "The y offset of the text scrolled using the UI_SCROLLING_LONG_MESSAGE ownerdraw.",
	"ui_scrollTextYOffsetResetDelay": "The delay after the UI_SCROLLING_LONG_MESSAGE ownerdraw finishes scrolling the text",
	"ui_serverStatusTimeOut": "Time in milliseconds before a server status request times out",
	"ui_showBryceMagic": "Whether to display the COD Elite button in the MP main menu.",
	"ui_showDLCMaps": "Whether to display the DLC maps.",
	"ui_smallFont": "Small font scale",
	"ui_specops": "whether or not to use special specops only hud elements",
	"ui_SPReminderPopupInterval": "Duration between SP reminder popup occurrence.",
	"ui_storeButtonPressed": "Dvar set when we press the store button.",
	"ui_totalDLCReleased": "Total number of dlc released so far.",
	"ui_xpscale": "Used by pc clients to show scr_xpscale in the UI",
	"unsubscriptionCooloffTimer": "This dvar is used to set the cool of time for unsubscribing the xuids of the recent met playerlist.",
	"using_original": "Whether user has only original maps.",
	"vcs_timelimit": "Sets the timelimit for the VCS easter egg",
	"vcs_WindowState": "indicates the display state of the vcs system 0=not displayed, 1=windowed, 2=fullscreen",
	"vehanim_debug": "Show debug information for vehicle anims",
	"vehanim_enable": "Enable player vehicle anims",
	"vehGunnerSplashDamage": "Percentage of projectile and grenade splash damage that vehicle gunners take.",
	"vehHelicopterboundMapHeight": "Helicopter Bounding height.",
	"vehHelicopterboundMapLowerRightX": "Helicopter Bounding box.",
	"vehHelicopterboundMapLowerRightY": "Helicopter Bounding box.",
	"vehHelicopterboundMapUpperLeftX": "Helicopter Bounding box.",
	"vehHelicopterboundMapUpperLeftY": "Helicopter Bounding box.",
	"vehHelicopterboundsOn": "Heli bounds on/off.",
	"vehHelicopterDefaultPitch": "Set the default pitch of the helicopter.",
	"vehHelicopterFreeLook": "Allow free look with left trigger.",
	"vehHelicopterHoverSpeedThreshold": "The speed below which the player helicopter begins to jitter the tilt, for hovering",
	"vehHelicopterInvertUpDown": "Invert the altitude control on the player helicopter.",
	"vehHelicopterLookaheadTime": "How far ahead (in seconds) the player helicopter looks ahead, to avoid hard collisions.  (Like driving down the highway, you should keep 2 seconds distance between you and the vehicle in front of you)",
	"vehHelicopterMaxHeightLockOffset": "The maximum the helicopter can move above the height mesh.",
	"vehHelicopterMinHeightLockOffset": "The maximum the helicopter can move below the height mesh.",
	"vehHelicopterPathTransitionTime": "How quickly the helicopter transitions from driving path to locked path.",
	"vehHelicopterRightStickDeadzone": "Dead-zone for the axes of the right thumbstick.  This helps to better control the two axes separately.",
	"vehHelicopterRotDecel": "Set the rotational deceleration or dampening for the helicopter.",
	"vehHelicopterScaleMovement": "Scales down the smaller of the left stick axes.",
	"vehHelicopterSoftCollisions": "Player helicopters have soft collisions (slow down before they collide).",
	"vehHelicopterStrafeDeadzone": "Dead-zone so that you can fly straight forward easily without accidentally strafing (and thus rolling).",
	"vehHelicopterTiltFromViewangles": "The amount of tilt caused by the current velocity",
	"vehHelicopterYawAltitudeControls": "Determines how to control yaw and altitude",
	"vehHelicopterYawOnLeftStick": "The yaw speed created by the left stick when pushing the stick diagonally (e.g., moving forward and strafing slightly).",
	"vehicle_collision_prediction_time": "How far ahead of the vehicle it should predict to do collision damage.",
	"vehicle_damage_bouncing_betty": "Bouncing betty damage for vehicles.",
	"vehicle_damage_bullet": "Bullet damage for vehicles.",
	"vehicle_damage_grenade": "Grenade damage for vehicles.",
	"vehicle_damage_max_shielding": "Percent of core damage that armor can shield.",
	"vehicle_damage_projectile": "Projectile damage for vehicles.",
	"vehicle_damage_satchel_charge": "Satchel charge damage for vehicles.",
	"vehicle_damage_sticky_grenade": "Sticky grenade damage for vehicles.",
	"vehicle_damage_zone_front": "Front zone damage for vehicles.",
	"vehicle_damage_zone_rear": "Rear zone damage for vehicles.",
	"vehicle_damage_zone_side": "Side zone damage for vehicles.",
	"vehicle_damage_zone_under": "Bottom zone damage for vehicles.",
	"vehicle_destructible_damage_bouncing_betty": "Bouncing betty damage for destructible armor on vehicles.",
	"vehicle_destructible_damage_bouncing_betty_radius": "Radius for bouncing betty damage for destructible armor on vehicles.",
	"vehicle_destructible_damage_grenade": "Grenade damage for destructible armor on vehicles.",
	"vehicle_destructible_damage_grenade_radius": "Radius for grenade damage for destructible armor on vehicles.",
	"vehicle_destructible_damage_projectile_radius": "Radius for projectile damage for destructible armor on vehicles.",
	"vehicle_destructible_damage_satchel_charge": "Satchel charge damage for destructible armor on vehicles.",
	"vehicle_destructible_damage_satchel_charge_radius": "Radius for satchel charge damage for destructible armor on vehicles.",
	"vehicle_destructible_damage_sticky_grenade": "Sticky grenade damage for destructible armor on vehicles.",
	"vehicle_destructible_damage_sticky_grenade_radius": "Radius for sticky grenade damage for destructible armor on vehicles.",
	"vehicle_piece_damagesfx_threshold": "Minimum amount of damage for which a destructible piece damageSound SFX will be played.",
	"vehicle_push_during_mantle": "Enable player mantling",
	"vehicle_riding": "Turning this on enables players to walk around on top of vehiclesvehCameraTurretOffsetADS",
	"vehicle_selfCollision": "Enabled the vehicle to shoot itself with it's own turret.",
	"vehicle_sounds_cutoff": "Use to turn of the vehicle sounds if the distance between the camera and the vehicle is more than this value",
	"vehicle_switch_seat_delay": "Delay before player can switch seats again.",
	"vehicle_useRadius": "The radius within which a player can enter a vehicle",
	"vehicleMouseExtraTurnSpeed": "Increase assist for turn angle for nitrous vehicles when not using a gamepad.",
	"vehLocationalVehicleSeatEntry": "Assigns the player seat based on the entry location, NOT first in first available position",
	"vehLockTurretToPlayerView": "Locks the turret angles to the player angles and sets the players rotation speed to the turrets rotRate",
	"vehNPCThrottleMultiplier": "Speed of vehicle mul this = throttle percentage.",
	"vehPlaneAssistedFlying": "This is set when the plane is using assisted flying.",
	"vehPlaneConventionalFlight": "Setting this will make the plane fly ctol only. Default is ctol/vtol combo.",
	"vehPlaneFakeLiftForce": "Fake lift force on aircraft.  Adds extra pitch when non-horizontal.",
	"vehPlaneGravityForce": "Gravity force on aircraft.",
	"vehPlaneLiftForce": "Lift force on aircraft.",
	"vehPlaneLowSpeed": "Min speed.",
	"vehPlanePitchAccel": "vehPlaneRollAccel",
	"vehPlanePlayerAvoidance": "Enable/Disable player building avoidance.",
	"vehPlaneRollAccel": "Adjustable rotation scaler.",
	"vehPlaneRollDeadZone": "Roll input dead zone. Percentage of stick movement to ignore for roll.",
	"vehPlaneSpeedControl": "Setting this will give the player speed control.",
	"vehPlaneTurnAssistDecayRate": "The rate at which the yaw and pitch input from the mouse are kept between frames. Used when the flying assisted.",
	"vehPlaneYawFromRollScale": "Adjustable rotation scaler.",
	"vehPlaneYawSpeed": "Adjustable rotation scaler.",
	"version": "Game version",
	"vid_xpos": "Game window horizontal position",
	"vid_ypos": "game window vertical position",
	"WADTimestampUpdateInterval": "Time in milliseconds since the last WAD timestamp is retrieved",
	"waitOnStatsTimeout": "Time in seconds to wait for stats to be fetched while dev mapping.",
	"wallmount_turret_placement_trace_maxs": "maxs of the bound used for the placement trace",
	"wallmount_turret_placement_trace_mins": "mins of the bound used for the placement trace",
	"waterbrush_entity": "CM_GetWaterHeight function will test against this enitty. Can be used on brushmodels to move the water level",
	"waypointDistFade": "Distance to start fading waypoints when the player is ADS",
	"waypointDistScaleRangeMax": "Distance from player that icon distance scaling ends.",
	"waypointDistScaleRangeMin": "Distance from player that icon distance scaling starts.",
	"waypointDistScaleSmallest": "Smallest scale that the distance effect uses.",
	"waypointIconHeight": "Height of the offscreen pointer.",
	"waypointIconWidth": "Width of the offscreen pointer.",
	"waypointMaxDrawDist": "Stop drawing the offscreen indicator and revive indicator after a certain distance.",
	"waypointOffscreenCornerRadius": "Size of the rounded corners.",
	"waypointOffscreenDistanceThresholdAlpha": "Distance from the threshold over which offscreen objective icons lerp their alpha.",
	"waypointOffscreenPadBottom": "waypointOffscreenPadTop",
	"waypointOffscreenPadLeft": "Offset from the edge.",
	"waypointOffscreenPadRight": "waypointOffscreenPadLeft",
	"waypointOffscreenPadTop": "waypointOffscreenPadRight",
	"waypointOffscreenPointerDistance": "Distance from the center of the offscreen objective icon to the center its arrow.",
	"waypointOffscreenPointerHeight": "waypointOffscreenPointerWidth",
	"waypointOffscreenPointerWidth": "waypointIconHeight",
	"waypointOffscreenRoundedCorners": "Off-screen icons take rounded corners when true.  90-degree corners when false.",
	"waypointOffscreenScaleLength": "How far the offscreen icon scale travels from full to smallest scale.",
	"waypointOffscreenScaleSmallest": "Smallest scale that the offscreen effect uses.",
	"waypointPlayerOffsetCrouch": "For waypoints pointing to players, how high to offset off of their origin when they are crouching.",
	"waypointPlayerOffsetProne": "For waypoints pointing to players, how high to offset off of their origin when they are prone.",
	"waypointPlayerOffsetRevive": "For waypoints pointing to players, how high to offset off of their origin when they are in last stand.",
	"waypointPlayerOffsetStand": "For waypoints pointing to players, how high to offset off of their origin when they are standing.",
	"waypointSplitscreenScale": "Scale applied to waypoint icons in splitscreen views.",
	"waypointTimeFade": "Time in ms to fade waypoints the player is ADS",
	"wideScreen": "True if the game video is running in 16x9 aspect, false if 4x3.",
	"wiiuIkEnabled": "Turn on/off WiiU IK",
	"wind_debug_display": "shows wind debug display",
	"wind_global_hi_altitude": "altitude of global hi-level wind",
	"wind_global_low_altitude": "altitude of global low-level wind",
	"wind_global_low_strength_percent": "strength of global low-level wind, expressed as a percentage of wind_global_vector",
	"wind_global_vector": "global wind force in units/sec. This is also the hi-level wind",
	"wind_grass_gust_distance": "max distance at which to place gusts",
	"wind_grass_gust_radius": "size of global wind gust effector",
	"wind_grass_gust_speed": "speed multiplier for gusts",
	"wind_grass_gust_strength": "percentage to bump the wind in a gust",
	"wind_grass_gustinterval": "global wind force gust interval",
	"wind_grass_scale": "global wind force scaler",
	"wind_grass_tension": "global wind grass tension (stiffness)",
	"wind_leaf_scale": "global wind grass tension (stiffness)",
	"winvoice_loopback": "Echo microphone input locally",
	"winvoice_mic_mute": "Mute the microphone",
	"winvoice_mic_reclevel": "Microphone recording level",
	"winvoice_mic_scaler": "Microphone scaler value",
	"winvoice_save_voice": "Write voice data to a file",
	"winvoice_voice_level": "Voice scaler value",
	"xblive_clanListChanged": "Clan list gets updated",
	"xblive_clanmatch": "Current game is a clan match",
	"xblive_ec_firstupdatems": "MS to wait before deciding to early out qos",
	"xblive_ec_lastupdatems": "MS since last update required to early out qos",
	"xblive_ec_maxprobewait": "Max MS for matchmaking QoS.",
	"xblive_ec_minpercent": "Minimum percentage of probe results required before early outing qos",
	"xblive_ec_minprobes": "Minimum probe results required before early outing qos",
	"xblive_loggedin": "User is logged into online service",
	"xblive_mappacks": "0 = original maps only, 1 = new maps only, 2 = both original and new",
	"xblive_matchEndingSoon": "True if the match is ending soon",
	"xblive_privatematch": "Current game is a private match",
	"xblive_rankedmatch": "Current game is a ranked match",
	"xblive_theater": "Current game is a theater mode",
	"xblive_wagermatch": "Current game is a wager match",
	"xenon_maxVoicePacketsPerSec": "Max voice packets per second a client will send",
	"xenon_maxVoicePacketsPerSecForServer": "Max voice packets per second the server will send",
	"ytAuthCooloff": "Wait for a while after receiving auth and before trying to get token info",
	"ytAuthCooloffTime": "Time to wait after receiving auth and before getting token info",
	"ytForcePrivate": "Force youtube clip uploads to be private",
	"zero_stats_check": "Check for zeroed out stats from Demonware",
	"zombie_double_wide_checks": "Whether to do double wide checks when finding a start node for a pathfinding check",
	"zombie_useOldPathFallback": "Whether to use the old method of finding closest node when pathfind fails",
	"zombiemode_path_minz_bias": "Bias to prevent missing valid cells below the origin"
}